<div><h1><a id="id2" name="id2"><!--id2--></a>Overview</h1><p>Communications in the computer world takes place in two dimensions. The first is the communication between man and machine for example through a keyboard as previously discussed. The second involves the transfer of data from machine to machine. This is often known as data communications or peripheral communications.</p><p><a href="http://localhost:8000/rep.test-content/packages/ele_1301_s1/media/resources/cmap/peripheral_comms.html">Peripheral communications (concept map)</a></p><h1><a id="id3" name="id3"><!--id3--></a>Objectives</h1><p class="P7">At the completion of this module you will be able to:</p><ul class="lib"><li><p>list the concepts of typical communication channels and their major characteristics for digital information transmission</p></li><li><p>describe the use of typical interface devices including the Universal Asynchronous Receiver Transmitter (UART)</p></li><li><p>demonstrate the basics of programming the Motorola MC68HC11 to transmit and receive data</p></li><li><p>state the protocols involved with typical standard interfaces including the RS232 and GPIB systems</p></li><li><p>list the techniques involved in long distance digital communication including the operation of a modem.<br/></p></li></ul><h1><a id="id5" name="id5"><!--id5--></a>14.1 Introduction</h1><p>The link between the machines will depend in many cases on the equipment types and the application. It is often referred to as the communication channel.</p><h2><a id="id6" name="id6"><!--id6--></a>14.1.1 Communication channels</h2><p>Currently communication channels are constructed of copper wire links, coaxial cables, fibre-optic cables or microwave links.</p><p>Copper wire links may be composed of twin wire transmission lines (as in a telephone line) or 8, 16, 32, 64 wires grouped together constituting a data bus. These lines can easily be strung from point to point however they are susceptible to external electrical interference from nearby power switching systems, lightening and other sources. All of these can corrupt the data on the lines.</p><p>Coaxial cables are twin wire transmission lines constructed so one wire is a tube with the other wire fixed concentrically within the tube. It immediately has the advantages of physical strength together with shielding provided by the exterior tube. Electrical interference to signals on this line is minimised by the shield. It is used as a communication channel within equipment, between equipments and between countries as it can conveniently be laid on the ocean floor or underground. Over long distances the losses in this cable become significant, however they can be compensated for by adding regular repeaters (amplifiers) to the line at appropriate intervals.</p><p>Fibre optic cables are a relatively new technology and they provide a communications channel in which the signals are transmitted by light energy instead of electrical energy. This is an extremely efficient, low loss medium which may eventually replace conventional wire based channels. It has other advantages such as lightness of weight, low cost, small size and large carrying capacity. It is frequently being used on new installations throughout the world. A fibre optic cable is a glass rod about the diameter of a human hair. In appropriate lengths it is reasonably flexible and it is supported within a plastic tube for strength in use. Electrical data signals are converted to light pulses at the sending end of the link and back to electrical pulses at the receiving end.</p><p>Microwave links are radio transmission systems operating at very high frequencies (4-6&#xA0;GHz) onto which the data signals are modulated. It normally only provides line-of-sight channels and repeaters are used about every 30 miles on the earth to extend the range to any length. Microwave systems can be also used to reach satellites in space to achieve global communications.</p><p>A table showing the relative carrying capacities of the transmission channels discussed is now shown.</p><div class="Table6" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table6" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; border: 1.0px solid #000000"><colgroup><col style="width:4.867cm;"/></colgroup><tbody><tr><td class="Table6_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Channel</b></p></td><td class="Table6_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Bandwidth</b></p></td><td class="Table6_C1" style="vertical-align: top;  border:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Relative Capacity</b></p></td></tr><tr><td class="Table6_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Twin Wire</p></td><td class="Table6_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>10 <span class="spCh spChx2013">&#x2013;</span> 50000Hz</p></td><td class="Table6_C2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p class="right">12</p></td></tr><tr><td class="Table6_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Coaxial Cable</p></td><td class="Table6_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>1 <span class="spCh spChx2013">&#x2013;</span> 12MHz</p></td><td class="Table6_C2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p class="right">3000</p></td></tr><tr><td class="Table6_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Microwave</p></td><td class="Table6_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>1 <span class="spCh spChx2013">&#x2013;</span> 40GHz</p></td><td class="Table6_C2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p class="right">50000</p></td></tr><tr><td class="Table6_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Fibre Optics</p></td><td class="Table6_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>100 <span class="spCh spChx2013">&#x2013;</span> 1000THz</p></td><td class="Table6_C2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p class="right">250000000000</p></td></tr></tbody></table></div><p/><h2><a id="id7" name="id7"><!--id7--></a>14.1.2 Channel characteristics</h2><p>Communication channels can be categorised by several characteristics, including the nature of the signal together with the mode, direction and speed of transmission.</p><p>Signals on communication channels may be analog or digital. Most conventional long line systems have been designed for analog signals and in many cases the digital signals require converting to analog signals prior to transmission. New digital systems are now becoming available however to improve this situation.</p><p>The transmission mode used may be either <span class="spCh spChx2018">&#x2018;</span>parallel<span class="spCh spChx2019">&#x2019;</span> or <span class="spCh spChx2018">&#x2018;</span>serial<span class="spCh spChx2019">&#x2019;</span>.</p><h3><a id="id8" name="id8"><!--id8--></a>(a) Parallel transmission mode</h3><p>Short distance communications between machines may take place across several lines simultaneously such as a bus. This is known as parallel transmission. If for instance we wished to transmit the ASCII character <span class="spCh spChx2018">&#x2018;</span>C<span class="spCh spChx2019">&#x2019;</span> (1000011) we would need 7 lines, one for each binary bit. Other control bus lines would also be required in this system to communicate with the peripheral prior to transmission. This method of transmission is very fast provided the many lines involved are always available. Long distance communication using this mode is prone to interference and expensive as it uses so many lines. It is generally restricted to short distance communications for these reasons.</p><p>This course will concentrate on the most widely used method of data communications, which is the serial transmission mode.</p><h3><a id="id9" name="id9"><!--id9--></a>(b)    Serial transmission mode</h3><p>Data may be transmitted over a single line in serial form. This means the 7 bits for our ASCII character are transmitted one at a time. However the receiver requires more information than just the data. Otherwise it won<span class="spCh spChx2019">&#x2019;</span>t know when one character ends and another starts. In other words the two machines require synchronising. Synchronisation requires two parameters:</p><ul class="lib"><li><p>bit synchronisation</p></li><li><p>character synchronisation.<br/></p></li></ul><p><b>Bit synchronisation</b></p><p>Bit synchronisation is necessary so that the receiving device knows when to sample the received signal to see if it is a logic 1 or a logic 0. This is obviously related to the speed at which data is transmitted and correct synchronisation is achieved when both the transmitter and the receiver are operating at identical speeds. This is accomplished by using timing oscillators (clocks) at each end running at identical speeds. The clock at the receiver determines that the data is to be sampled only at intervals corresponding to the frequency of the transmitting clock.</p><p><b>Character synchronisation</b></p><p>Once the receiver and transmitter are operating at identical speeds, the receiver needs to know which bits of the signal make up each character being sent. This is achieved by `framing<span class="spCh spChx2019">&#x2019;</span> the data front and back with more information known as the character synchronisation bits.</p><p>There are two methods used frequently to achieve this, serial asynchronous and serial synchronous.</p><h3><a id="id10" name="id10"><!--id10--></a>(c) Serial asynchronous</h3><p>In this transmission mode individual characters (made up of several bits) are transmitted at irregular intervals. That is, as they are entered by a user for example. Characters may be of any pre-defined length however they must be framed by <span class="spCh spChx2018">&#x2018;</span>start<span class="spCh spChx2019">&#x2019;</span> and <span class="spCh spChx2018">&#x2018;</span>stop<span class="spCh spChx2019">&#x2019;</span> bits of extra data. The start bits tell the receiver a character is coming and to start sampling and storing the next predefined number of bits as data belonging to a character. The stop bits reconfigure the system in readiness for the next characters arrival. An additional bit known as a parity bit is usually included in the signal for error checking purposes. The period in between characters, which may be of random length is always filled up with logic 1<span class="spCh spChx2019">&#x2019;</span>s. It signifies a <span class="spCh spChx2018">&#x2018;</span>no signal<span class="spCh spChx2019">&#x2019;</span> or <span class="spCh spChx2018">&#x2018;</span>idle<span class="spCh spChx2019">&#x2019;</span> line condition. A diagram showing an asynchronous signal format is now provided.</p><p class="P5"><a name="graphics2"><!-- --></a><img alt="graphics2" class="fr1" height="103" src="module14_files/3cf69331_552x103.jpg" style="border:0px; vertical-align: top" width="552"/></p><p class="figure-caption-below"><b>Figure </b><b>14</b><b>.</b><b>1</b><b>:</b> Asynchronous transmission format</p><p>This mode is used for lower speed data transmission however it is used extensively with most communication equipment designed for personal computers and other microprocessor systems.</p><h3><a id="id11" name="id11"><!--id11--></a>(d) Serial synchronous</h3><p>This mode differs from the asynchronous mode in that large <b>blocks of data</b> are transferred at <b>regular</b> intervals. In this case the data blocks are framed with synchronising information rather than each character within a block. The receiver becomes synchronised with the transmitter when it detects in the idle stream a special character known as SYN. Once it detects one or two (or more) of these SYN characters it knows that a data block will be coming soon. Preceding the data block is another character called STX (start of text). Once this is received the receiver knows all the next signals constitute data. This is received and stored as pre-defined length words until the ETX (end of text) signal is received. The system then idles until the next block is transmitted. Error checking parity bits are also included in the block. A typical format is now shown.</p><p><a name="graphics3"><!-- --></a><img alt="graphics3" class="fr1" height="86" src="module14_files/3489bc55_552x86.jpg" style="border:0px; vertical-align: top" width="552"/></p><p class="figure-caption-below"><b>Figure </b><b>14</b><b>.</b><b>2</b><b>:</b> Synchronous transmission format</p><p>Actually more framing characters involving buffer sizes and addresses can be included in the framing protocol.</p><p>This system requires more complex and expensive equipment than the asynchronous mode however it does give higher speeds and greater accuracy.</p><h2><a id="id12" name="id12"><!--id12--></a>14.1.3 Direction of transmission</h2><p>Transmission may be achieved in any one of three general categories. Simplex, half-duplex or full-duplex.</p><ul class="lib"><li><p>Simplex transmission means that data flows only in one direction. An example would be a sensor connected to a process. The sensor transmits data relating to that process only and no information is ever sent back to the sensor. A thermistor measuring oil temperature of an engine would be a typical example.</p></li><li><p>Half-duplex transmission means data can flow in both directions but only one direction at a time. An example of this is a CB radio system. Users can either talk or listen but not do both simultaneously. Half-duplex is often used between a computer and a peripheral device. Senders must advise when they have finished transmitting and are ready to receive usually by some coded message. In this system the entire bandwidth of the channel is available in either direction so data rates can be high.</p></li><li><p>Full-duplex transmission means data can flow in both directions simultaneously. A normal telephone line is an example of this type of channel. This facility can be used for interactive computer applications. A terminal for instance, can interrupt the computer while it is transmitting and ask for other data and also a computer could interrupt a terminal and give it a higher priority task.<br/></p></li></ul><p>Full-duplex systems use half the available channel bandwidth in either direction which usually affects the allowable transmission speed.</p><h2><a id="id13" name="id13"><!--id13--></a>14.1.4 Speed of transmission</h2><p>The rate at which transmission takes place of data on a channel is called <b>the baud</b> rate. It is a measure of the number of signal-events per second on the channel. Usually it is used to describe the number of bits sent per second. If a character has 1 start bit + 7 data bits + 1&#xA0;parity bit + 2 stop bits it means we have 11 bits/character. For a data rate of 10 characters per second we say the transmission speed is 10 x 11 = 110 BAUD. Common baud rates are 110, 150, 300, 600, 1200, 2400, 4800, 9600 and 19200.</p><p class="P13"/><div class="Table11" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table11 selfassessment" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table11_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics25"><!-- --></a><img alt="graphics25" class="fr2" height="57" src="module14_files/74f1452e_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table11_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id14" name="id14"><!--id14--></a><span class="T1">Self assessment </span><span class="T1">14.1</span></h6><ol class="lin" style="list-style: decimal;"><li><p>Describe using formatted sketches the difference between synchronous and asynchronous serial transmission systems.</p></li><li><p>Sketch and explain a typical signal format used in serial asynchronous data communications.</p></li><li><p>Explain the difference between <span class="spCh spChx2018">&#x2018;</span>serial<span class="spCh spChx2019">&#x2019;</span> and <span class="spCh spChx2018">&#x2018;</span>parallel<span class="spCh spChx2019">&#x2019;</span> transmission modes in connection with a digital communications channel.</p></li><li><p>Explain, using typical examples, the following methods of data transmission.</p><ol class="li-lower-roman" style="list-style: lower-roman;"><li><p>Simplex</p></li><li><p>Half-duplex</p></li><li><p>Full-duplex</p></li></ol></li></ol></td></tr></tbody></table></div><p/><h1><a id="id15" name="id15"><!--id15--></a>14.2 Interface devices</h1><p class="P7">Many peripherals connected to computers are in fact serial devices, such as printers, and they require asynchronous serial data transmission.</p><p class="indent" style="keep-together:always; keep-with-next:always; "><a name="graphics12"><!-- --></a><img alt="graphics12" class="fr2" height="157" src="module14_files/2a130646_510x157.jpg" style="border:0px; vertical-align: top" width="510"/></p><p class="figure-caption-below"><b>Figure </b><b>14</b><b>.</b><b>3</b><b>:</b> Serial interface</p><p>This system:</p><ul class="lib"><li><p>takes an 8 bit parallel word from the CPU and converts it to a serial data word for the peripheral</p></li><li><p>takes a serial data word from the peripheral and converts it to an 8 bit parallel word for the CPU.<br/></p></li></ul><p>It acts as a parallel-to-serial converter and vice versa.</p><h2><a id="id16" name="id16"><!--id16--></a>14.2.1 Parallel to serial interfaces</h2><p>Because of extensive use of this type of communication, manufacturers use a variety of methods to do the <span class="spCh spChx2018">&#x2018;</span>interface circuit<span class="spCh spChx2019">&#x2019;</span> task shown in the previous diagram.</p><p>One method is to use a dedicated LSI device such as a Universal Asynchronous Receiver Transmitter (UART, Motorola 6850) between the CPU and the peripheral. Alternatively, the <span class="spCh spChx2018">&#x2018;</span>interface circuit<span class="spCh spChx2019">&#x2019;</span> may be integrated onto the same chip as the CPU, e.g. the <span class="spCh spChx2018">&#x2018;</span>68HC11 micro-controller.</p><p>The UART</p><p>All UARTs are basically identical in nature and they contain:</p><ul class="lib"><li><p>A serial receiver (Rx), which takes serial input (Rx DATA) and converts it to a parallel format and stores it in a Rx register (RxDR).</p></li><li><p>A serial transmitter (Tx) to convert the parallel word (TxDR) to serial output (TxDATA).</p></li><li><p>A bidirectional data bus buffer.</p></li><li><p>External clock inputs RxCLK and TxCLK.<br/></p></li></ul><p><a name="graphics4"><!-- --></a><img alt="graphics4" class="fr1" height="182" src="module14_files/m3983b34_552x182.jpg" style="border:0px; vertical-align: top" width="552"/></p><p class="figure-caption-below"><b>Figure </b><b>14</b><b>.</b><b>4</b><b>:</b> Typical UART</p><p>In operation, when the CPU wants to transmit a data word to the device it sends the word in on the data bus. This is stored in TxDR.</p><p>The Tx section then adds a start bit, parity and stop bits and puts the completed word into a shift register.</p><p><a name="graphics7"><!-- --></a><img alt="graphics7" class="fr1" height="108" src="module14_files/e36db24_552x108.jpg" style="border:0px; vertical-align: top" width="552"/></p><p class="figure-caption-below"><b>Figure </b><b>14</b><b>.</b><b>5</b><b>:</b> Tx shift register</p><p>The contents of this register are then shifted right at a rate determined by the TxCLK which has a frequency equal to the desired baud rate. This produces the serial data word output TxDATA.</p><p>For reception, the Rx section takes in the device word and puts the data on the data bus for the CPU to read just like it was a memory location. The UART has an internal control register which the CPU can write into also just like a memory location. This register controls the internal functions of the UART.</p><p><b>Synchronising the Rx to the serial data input</b></p><p>As we noted before, the start bit synchronises the Rx to the incoming data. It then knows data, parity and stop bits will follow.</p><p>In order to ensure this synchronisation is almost foolproof and that some noise pulse <span class="spCh spChx2018">&#x2018;</span>glitch<span class="spCh spChx2019">&#x2019;</span> on the line might not be interpreted as a start bit, the UART uses an external clock, which is a much higher frequency than the baud rate, usually 16 times higher. That is, for a rate of 110 baud we have RxCLK = 16 x 110 = 1760 Hz. This is the actual frequency applied to the UART<span class="spCh spChx2019">&#x2019;</span>s RxCLK.</p><p>In operation, after it senses the first negative transition of the first start bit, the receiver waits 8 periods of RxCLK and then samples the serial input again to see if it is still low. This means it looks about the middle of each bit time T<sub>B</sub>. It continues this process of sampling about the centre of each T<sub>B</sub> period continuously.</p><p>After sampling each bit it stores these samples in a register driven by the Rx data CLK signal derived from the RxCLK.</p><p><a name="graphics17"><!-- --></a><img alt="graphics17" class="fr1" height="240" src="module14_files/m195592e2_546x240.jpg" style="border:0px; vertical-align: top" width="546"/></p><p class="figure-caption-below"><b>Figure </b><b>14</b><b>.</b><b>6</b><b>:</b> Serial timing diagram</p><p>Once the complete data word has been shifted into the Rx shift register, circuits in the UART automatically check to see that the correct number of stop bits are logic 1<span class="spCh spChx2019">&#x2019;</span>s. If any stop bit&#xA0;=&#xA0;0, a <b>framing error</b> has occurred and a flag is set in an internal UART status register.</p><p>This status register can be read by the CPU just like a memory location and CPU can then take appropriate action.</p><p>The UART also checks parity and can set a <b>parity error</b> flag if an error is detected. Once all the bits are in the RxDR its contents can be transferred to the CPU. This must be done before the next word is put into RxDR or another error called <b>overrun error</b> can occur. Again a flag is set in the UART status register.</p><p>Overrun errors can be avoided by ensuring the CPU reads the RxDR within the time it takes for a new word to be shifted in. This time of course depends upon the baud rate being used.</p><h2><a id="id17" name="id17"><!--id17--></a>14.2.2 The MC68HC11 Micro-controller</h2><p>The <span class="spCh spChx2018">&#x2018;</span>68HC11 supports both asynchronous and synchronous serial communications by multiplexing the functions on Port D. The <span class="spCh spChx2018">&#x2018;</span>Serial Communications Interface<span class="spCh spChx2019">&#x2019;</span> (SCI) provides asynchronous communications via pins PD0/RxD and PD1/TxD when enabled. The <span class="spCh spChx2018">&#x2018;</span>Serial Peripheral Interface<span class="spCh spChx2019">&#x2019;</span> (SPI) provides synchronous communications via pins PD2/MISO, PD3/MOSI, PD4/SCK and PD5/SS when enabled. For the purpose of this course discussion will be limited to a brief overview of the SCI, with registers set for <span class="spCh spChx2018">&#x2018;</span>normal<span class="spCh spChx2019">&#x2019;</span> operation. You are not expected to recall the purpose of individual bits within each register, but you need to understand how the SCI, in particular, is configured for serial communication.</p><p class="P5">The SCI consists of 5 registers each with a unique memory address, as follows.</p><ul class="lib"><li><p>BAUD <span class="spCh spChx2013">&#x2013;</span> Baud rate control register</p></li><li><p>SCCR1 <span class="spCh spChx2013">&#x2013;</span> Control register 1 for data format</p></li><li><p>SCCR2 <span class="spCh spChx2013">&#x2013;</span> Control register 2 for mode of operation</p></li><li><p>SCSR <span class="spCh spChx2013">&#x2013;</span> Status register generates interrupts and detects data errors</p></li><li><p>SCDR <span class="spCh spChx2013">&#x2013;</span> Receive and transmit data register.<br/></p></li></ul><p><b>Baud</b></p><div class="Table7" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table7" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; border: 1.0px solid #000000"><colgroup><col style="width:1.623cm;"/><col style="width:1.623cm;"/></colgroup><tbody><tr><td class="Table7_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center"/></td><td class="Table7_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">Bit 7</p></td><td class="Table7_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;&#xA0;&#xA0;6&#xA0;&#xA0;&#xA0;</p></td><td class="Table7_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">5</p></td><td class="Table7_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">4</p></td><td class="Table7_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">3</p></td><td class="Table7_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">2</p></td><td class="Table7_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">1</p></td><td class="Table7_I1" style="vertical-align: top;  border:1.0px solid #000000;  padding:0.097cm; "><p class="center">0</p></td></tr><tr><td class="Table7_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center">$002B</p></td><td class="Table7_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">TCLR</p></td><td class="Table7_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table7_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">SCP1</p></td><td class="Table7_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">SCP0</p></td><td class="Table7_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">RCKB</p></td><td class="Table7_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">SCR2</p></td><td class="Table7_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">SCR1</p></td><td class="Table7_I2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p class="center">SCR0</p></td></tr></tbody></table></div><p/><p>This register controls the baud rate. SCP1 and SCP0 control the baud rate pre-scalar, which consists of 4 clock frequency <span class="spCh spChx2018">&#x2018;</span>division factors<span class="spCh spChx2019">&#x2019;</span> (DF) <span class="spCh spChx2013">&#x2013;</span> 1, 3, 4 and 13 that correspond to the four possible settings of SCP1 and SCP0, i.e. 00, 01, 10, 11 respectively.</p><p><b>Example</b></p><p class="indent">If we assume a clock frequency of 1MHz and an over sampling rate of 16 then the highest baud rate possible is 62.5Kbaud. Over sampling refers to the number of times the received bit is sampled by the hardware in an effort to reduce errors.</p><p class="indent">Setting SCP1 and SCP0 to 00, DF = 1 and the pre-scalar baud rate is 62.5Kbaud.</p><p class="indent">Setting SCP1 and SCP0 to 11, DF = 13 and the pre-scalar baud rate is 4800baud.</p><p class="indent">The pre-scalar baud rates are further divided based on the values of SCR2, SCR1 and SCR0. That is, a further 8 division factors <span class="spCh spChx2013">&#x2013;</span> 1,2,4,8,16,32,64 and 128, corresponding to 000, 001, 010, etc.</p><p><b>Example</b></p><p class="indent">Using the previous example, the pre-scalar DF is set to 13 (4800baud). If SCR2, SCR1 and SCR0 are set to 010 (DF = 4) then the final baud rate is 1200baud.</p><p>Ignoring the TCLR and RCKB bits, the required BAUD register ($002B) word for 1200baud is $32.</p><p><b>SCCR1</b></p><div class="Table8" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table8" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:1.623cm;"/><col style="width:1.623cm;"/></colgroup><tbody><tr><td class="Table8_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center">$002C</p></td><td class="Table8_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;R8&#xA0;</p></td><td class="Table8_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;T8&#xA0;</p></td><td class="Table8_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;&#xA0;0&#xA0;&#xA0;</p></td><td class="Table8_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;&#xA0;M&#xA0;&#xA0;</p></td><td class="Table8_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">WAKE</p></td><td class="Table8_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;&#xA0;0&#xA0;&#xA0;</p></td><td class="Table8_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;&#xA0;0&#xA0;&#xA0;</p></td><td class="Table8_I1" style="vertical-align: top;  border:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;&#xA0;0&#xA0;&#xA0;</p></td></tr></tbody></table></div><p/><p>This register controls the data format. The character length is set by the M bit as follows:</p><p>M = 0 <span class="spCh spChx2013">&#x2013;</span> one start bit, 8 data bits, one stop bit<br/>M = 1 <span class="spCh spChx2013">&#x2013;</span> one start bit, 9 data bits, one stop bit<br/>The additional data bit can be used for parity checking or an extra stop bit.<br/>M = 0 is the most common setting. With this setting the other bits can be ignored.</p><p>So, for normal operation the required SCCR1 register ($002C) word for one start bit, 8 data bits, one stop bit is $00.</p><div class="Table9" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table9" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:1.623cm;"/><col style="width:1.623cm;"/></colgroup><tbody><tr><td class="Table9_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center">$002D</p></td><td class="Table9_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">TIE&#xA0;</p></td><td class="Table9_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">TCIE</p></td><td class="Table9_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">RIE&#xA0;</p></td><td class="Table9_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">ILIE</p></td><td class="Table9_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;TE&#xA0;</p></td><td class="Table9_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;RE&#xA0;</p></td><td class="Table9_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">RWU</p></td><td class="Table9_I1" style="vertical-align: top;  border:1.0px solid #000000;  padding:0.097cm; "><p class="center">SBK</p></td></tr></tbody></table></div><p/><p><b>SCCR2</b></p><div class="Table10" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table10" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:1.623cm;"/><col style="width:1.623cm;"/></colgroup><tbody><tr><td class="Table10_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center">$002D</p></td><td class="Table10_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">TIE&#xA0;</p></td><td class="Table10_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">TCIE</p></td><td class="Table10_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">RIE&#xA0;</p></td><td class="Table10_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">ILIE</p></td><td class="Table10_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;TE&#xA0;</p></td><td class="Table10_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;RE&#xA0;</p></td><td class="Table10_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">RWU</p></td><td class="Table10_I1" style="vertical-align: top;  border:1.0px solid #000000;  padding:0.097cm; "><p class="center">SBK</p></td></tr></tbody></table></div><p/><p>This register controls the mode of operation. TIE is the transmit interrupt enable bit. This bit is set to 0 for software polling of the status register bit TDRE.</p><p>TCIE is the transmit complete interrupt enable. Again, this bit is set to 0 for software polling of the status register TC bit.</p><p>RIE is the receiver interrupt enable. When a character is received and transferred into the RDR, we need to get an RDRF interrupt from the status register. Therefore this bit is set to 1.</p><p>ILIE is the idle interrupt enable and can be set to 0 to disable idle interrupts.</p><p>TE is the transmitter enable bit and is set to 1 to enable the SCI transmitter.</p><p>RE is the receiver enable bit and is set to 1 to enable the SCI receiver.</p><p>RWU (receiver wake up) is set to 0 for normal receiver operation.</p><p>SBK (transmitter send break character) is set to 0 for normal operation.</p><p>So, for normal operation the required SCCR2 register ($002D) word is $2C.</p><p><b>SCSR</b></p><div class="Table12" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table12" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:1.623cm;"/><col style="width:1.623cm;"/></colgroup><tbody><tr><td class="Table12_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center">$002E</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">TDRE</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;TC&#xA0;</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">RDRF</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">IDLE</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;OR&#xA0;</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;NF&#xA0;</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;FE&#xA0;</p></td><td class="Table12_I1" style="vertical-align: top;  border:1.0px solid #000000;  padding:0.097cm; "><p class="center">&#xA0;&#xA0;0&#xA0;&#xA0;</p></td></tr></tbody></table></div><p/><p>This register generates interrupts and detects data errors. TDRE is the transmit data register empty bit. This bit will be set (1) by the SCI hardware to indicate that a new character can be written to the SCDR. An interrupt will not be generated as software polling of this bit is used for normal operation.</p><p>RDRF is the receive data register full bit, and is the only other bit of interest in this register. This bit will be set and an interrupt generated to indicate that a character has been received and has transferred from the receive shift register to the SCDR where software can read it. An interrupt service routine will be required to read the data.</p><p class="P5"><b>SCDR</b></p><div class="Table13" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table13" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; border: 1.0px solid #000000"><colgroup><col style="width:1.623cm;"/><col style="width:1.623cm;"/></colgroup><tbody><tr><td class="Table13_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center">$002F</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">R7</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">R6</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">R5</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">R4</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">R3</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">R2</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center">R1</p></td><td class="Table13_I1" style="vertical-align: top;  border:1.0px solid #000000;  padding:0.097cm; "><p class="center">R0</p></td></tr><tr><td class="Table13_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center"/></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">T7</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">T6</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">T5</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">T4</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">T3</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">T2</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">T1</p></td><td class="Table13_I2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p class="center">T0</p></td></tr></tbody></table></div><p/><p>This register is used to receive and transmit data.</p><p><b><span style="font-weight:normal; "><span class="T3">To use the Serial Communications Interface (SCI) refer to home experiments 14.1 and 14.2.</span></span></b></p><h2><a id="id18" name="id18"><!--id18--></a>14.2.3 Program example (flow chart only)</h2><p><a name="graphics9"><!-- --></a><img alt="graphics9" class="fr1" height="799" src="module14_files/452c90a2_549x799.jpg" style="border:0px; vertical-align: top" width="549"/></p><div class="Table14" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table14 learning" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table14_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics10"><!-- --></a><img alt="graphics10" class="fr2" height="57" src="module14_files/m73656803_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table14_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id19" name="id19"><!--id19--></a>Activity <span class="T1">14</span><span class="T1">.</span><span class="T1">1</span></h6><ol class="li-lower-alpha" style="list-style: lower-alpha;"><li><p>Refer to the ELE1301 course page on <span class="spCh spChx2018">&#x2018;</span>Study Desk<span class="spCh spChx2019">&#x2019;</span> and complete the following experiments:</p><ol class="li-lower-roman" style="list-style: lower-roman;"><li><p>Home experiment 14.1 <span class="spCh spChx2013">&#x2013;</span> SCI Polling</p></li><li><p>Home expierment 14.2 <span class="spCh spChx2013">&#x2013;</span> SCI Interrupts</p></li></ol></li></ol></td></tr></tbody></table></div><p class="P13"/><div class="Table21" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table21 selfassessment" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table21_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics1"><!-- --></a><img alt="graphics1" class="fr2" height="57" src="module14_files/74f1452e_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table21_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id20" name="id20"><!--id20--></a><span class="T1">Self assessment </span><span class="T1">14.2</span></h6><ol class="lin" style="list-style: decimal;"><li><p>Define baud rate and indicate how it could be determined for the following data stream; 1 start bit + 8 data bits + 1 stop bit, @ 30 characters per second.</p></li><li><p>Draw a properly formatted flow chart for an interrupt driven <span class="spCh spChx2018">&#x2018;</span>68HC11 Serial Communications Interface.</p></li><li><p>Sketch a block diagram of a typical asynchronous parallel to serial interface and explain the method used to transmit and receive serial data.</p></li><li><p>Explain, with the aid of a timing diagram, the method used to synchronise the receiver to the serial data input.</p></li><li><p>Define the following error terms associated with serial data transfer:</p><ol class="li-lower-roman" style="list-style: lower-roman;"><li><p>Framing error</p></li><li><p>Parity error</p></li><li><p>Overrun error</p></li></ol></li></ol></td></tr></tbody></table></div><p/><h1><a id="id21" name="id21"><!--id21--></a>14.3 Standard interfaces</h1><p>There are 2 basic interfaces in use today:</p><ul class="lib"><li><p>Electronic Industries Association RS-232 interface</p></li><li><p>IEEE STD 488 interface (also known as the Hewlett Packard interface on the General Purpose Interface Bus, GPIB).<br/></p></li></ul><h2><a id="id23" name="id23"><!--id23--></a>14.3.1 The RS-232 interface</h2><p>This standard specifies signal voltage levels and handshake signals between data terminal equipment and data communications equipment.</p><p>Typically RS232-C uses voltages -12 for a logic 1 and +12 for a logic 0.</p><p>Most standard IC<span class="spCh spChx2019">&#x2019;</span>s are TTL and use 0, and +5 V for logic 0 and 1 respectively. This requires some interface circuitry to make these voltage levels to be compatible.</p><p>The RS-232 system has many other features. For instance it is a <b>standard</b> which sets out which signals should appear on which pins of a standard 25 pin multi-way plug and cable as shown in the diagram on the following page.</p><p>The signals are divided into: data, control and timing.</p><p>Few installations use all of the signals available on the systems 25 wires. The standard defines that each wire can convey one of two voltages according to the following table:</p><div class="Table15" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table15" style="border-spacing: 0;empty-cells: show; margin-left:0.6cm; margin-right:7.034cm; width:6.967cm; border-collapse: collapse; border: 1.0px solid #000000"><colgroup><col style="width:3.484cm;"/><col style="width:3.484cm;"/></colgroup><tbody><tr><td class="Table15_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Bin</b></p></td><td class="Table15_B1" style="vertical-align: top;  border:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Voltage</b></p></td></tr><tr><td class="Table15_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">ON, 0, SPACE</p></td><td class="Table15_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p class="center">+3 to +25 V</p></td></tr><tr><td class="Table15_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">OFF, 1, MARK</p></td><td class="Table15_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p class="center">-3 to -25 V</p></td></tr></tbody></table></div><p/><p>Most systems use a standard set of lines as shown in the next table:</p><p class="table-caption-above"><b>Table </b><b>14</b><b>.</b><b>1</b><b>:</b> Commonly-used RS-232 signals</p><div class="Table16" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table16" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; border: 1.0px solid #000000"><colgroup><col style="width:3.649cm;"/><col style="width:2.371cm;"/><col style="width:1.235cm;"/><col style="width:7.347cm;"/></colgroup><tbody><tr><td class="Table16_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Signal name</b></p></td><td class="Table16_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Mnemonic</b></p></td><td class="Table16_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Pin</b></p></td><td class="Table16_D1" style="vertical-align: top;  border:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Use</b></p></td></tr><tr><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Protective Ground</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">GND</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td><td class="Table16_D2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>A connection to the terminals metal chassis.</p></td></tr><tr><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Transmitted Data</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">TDATA</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">2</p></td><td class="Table16_D2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Outgoing data path from the terminals point of view.</p></td></tr><tr><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Received Data</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">RDATA</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">3</p></td><td class="Table16_D2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Incoming data path from the terminals point of view.</p></td></tr><tr><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Request to Send</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">RTS</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">4</p></td><td class="Table16_D2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Activated by the terminal to tell the modem to prepare to receive data from the terminal.</p></td></tr><tr><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Clear to Send</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">CTS</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">5</p></td><td class="Table16_D2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Activated by the modem to tell the terminal that it is ready to receive data from the terminal.</p></td></tr><tr><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Data Set Ready</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">DSR</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">6</p></td><td class="Table16_D2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Activated by the modem to tell the terminal that the modem is operational.</p></td></tr><tr><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Signal Ground</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">SGND</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">7 </p></td><td class="Table16_D2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Return path for all other signals on the bus.</p></td></tr><tr><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Received Line Signal Detector</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">RLSD</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">8</p></td><td class="Table16_D2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Activated by the modem to tell the terminal that the modem has made contact with the computer and can sense the carrier.</p></td></tr><tr><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>Data Terminal Ready</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">DTR</p></td><td class="Table16_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">20</p></td><td class="Table16_D2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Activated by the terminal to tell the modem that the terminal is operational.</p></td></tr></tbody></table></div><p/><div class="Table17" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table17" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:1.346cm;"/><col style="width:13.256cm;"/></colgroup><tbody><tr><td style="vertical-align: top; "><p><b>Note:<br/>&#xA0;<br/>&#xA0;<br/>&#xA0;<br/>&#xA0;</b></p></td><td style="vertical-align: top; "><p>2 devices each with the same RS-232 standard may still be unable to communicate. Other parameters such as <b>timing </b>and <b>format variables</b> are critical for communications and are not covered by the standard. Fortunately most manufacturers are aware of this and try to make their systems compatible with others.</p></td></tr></tbody></table></div><p/><p><a name="graphics11"><!-- --></a><img alt="graphics11" class="fr1" height="791" src="module14_files/190471be_549x791.jpg" style="border:0px; vertical-align: top" width="549"/></p><blockquote class="bqs"><p>(Source: Tektronix 1979, <i>Essentials of data communication</i>, Tektronix Worldwide Marketing Centres, Beaverton, Oregon, USA, p. 14.)</p></blockquote><h2><a id="id25" name="id25"><!--id25--></a>14.3.2 The IEEE STD 488 or GPIB interface</h2><p>This system is designed for use in a network of devices usually up to 15. It uses a 24 line bus comprising:</p><ul class="lib"><li><p>8 ground lines</p></li><li><p>8 data lines</p></li><li><p>8 control lines.<br/></p></li></ul><p>A typical bus system is shown in the diagram.</p><p><a name="graphics8"><!-- --></a><img alt="graphics8" class="fr2" height="332" src="module14_files/m13c76779_397x332.jpg" style="border:0px; vertical-align: top" width="397"/></p><p class="figure-caption-below"><b>Figure </b><b>14</b><b>.</b><b>7</b><b>:</b> GPIB interface</p><p>Devices are classified into 3 types:</p><ul class="lib"><li><p>talkers that can Tx data on the data lines</p></li><li><p>listeners that can Rx data from the data lines</p></li><li><p>controllers that designate which devices can talk or listen.<br/></p></li></ul><h3><a id="id27" name="id27"><!--id27--></a>Bus operation</h3><p>In the control mode, a signal (ATN) is set low so all devices monitor the bus. Commands such as <b>untalk and unlisten</b> are then sent to eliminate all previous connection commands LISTEN (ADDRESS) and TALK (ADDRESS) are sent to reconfigure various devices to either talk or listen.</p><p>Addresses are assigned by manufacturer and only one device can talk at a time, however several can listen. A device can be addressed as a listener or a talker but not both at once.</p><p>If ATN is set high now, then only the previously addressed devices will participate.</p><p><b>IEE-488 signals</b></p><p>The signals on the various lines are described below:</p><p><i>8 Data Lines</i></p><p>These lines are indicated as D10-1 to D10-8 and data flows over them in bit parallel, byte serial form.</p><p><i>3 Data Transfer Lines</i></p><p>These lines provide communication between the talker and the listener. They are:</p><div class="Table20" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table20" style="border-spacing: 0;empty-cells: show; margin-left:0cm; margin-right:1.967cm; width:12.635cm; border-collapse: collapse; "><colgroup><col style="width:1.39cm;"/><col style="width:11.245cm;"/></colgroup><tbody><tr><td class="Table20_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>NDAC<br/>NRFD<br/>DAV</p></td><td class="Table20_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>meaning the device is ready to accept information<br/>indicating information is accepted by the listener<br/>indicating that valid data is available on the data lines</p></td></tr></tbody></table></div><p><i><!--empty--></i></p><p><i>5 Management Lines</i></p><p>These lines control the information flow on the bus. They are:</p><div class="Table19" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table19" style="border-spacing: 0;empty-cells: show; margin-left:0cm; margin-right:5.054cm; width:9.548cm; border-collapse: collapse; "><colgroup><col style="width:1.411cm;"/><col style="width:8.137cm;"/></colgroup><tbody><tr><td style="vertical-align: top; "><p>ATN</p></td><td style="vertical-align: top; "><p>indicates type of data on the data lines</p></td></tr><tr><td style="vertical-align: top; "><p>IFC</p></td><td style="vertical-align: top; "><p>configures the system in a desired state</p></td></tr><tr><td style="vertical-align: top; "><p>SRQ</p></td><td style="vertical-align: top; "><p>request for service</p></td></tr><tr><td style="vertical-align: top; "><p>REN</p></td><td style="vertical-align: top; "><p>remote operation selection</p></td></tr><tr><td style="vertical-align: top; "><p>EOI</p></td><td style="vertical-align: top; "><p>indicates completion of a transfer.</p></td></tr></tbody></table></div><p/><p class="P13"/><div class="Table18" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table18 selfassessment" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table18_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics5"><!-- --></a><img alt="graphics5" class="fr2" height="57" src="module14_files/74f1452e_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table18_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id28" name="id28"><!--id28--></a><span class="T1">Self assessment </span><span class="T1">14.3</span></h6><ol class="lin" style="list-style: decimal;"><li><p>Describe one standard interface system with which you are familiar.</p></li></ol></td></tr></tbody></table></div><p/><h1><a id="id29" name="id29"><!--id29--></a>14.4 Communications over long distances</h1><h2><a id="id30" name="id30"><!--id30--></a>14.4.1 Modems</h2><p>Computer systems often use the standard telephone lines to send digital data between a terminal and a computer. The available bandwidth is only 3.4 kHz on a standard telephone line.</p><p>The bandwidth of a square wave (digital signal) is practically very large and therefore such pulses cannot be transmitted over a conventional telephone line.</p><p>One common technique is to convert the digital pulses to sine waves. One frequency for a 0 and another for a 1. This is called Frequency Shift Keying (FSK).</p><p>Special circuits are available to convert the logic pulses to sine waves (modulation) and to convert the sine waves back to logic signals again (demodulation). A circuit, which performs both functions is called a modulator/demodulator or <b>modem</b>. A typical modem is shown in the diagram.</p><p><a name="graphics13"><!-- --></a><img alt="graphics13" class="fr2" height="207" src="module14_files/1341de16_306x207.jpg" style="border:0px; vertical-align: top" width="306"/></p><p>The modem has 2 sides, RS232 side and the FSK side.</p><p>A typical situation where a MPU is communicating with a remote main computer is shown in the diagram.</p><p/><p><a name="graphics15"><!-- --></a><img alt="graphics15" class="fr1" height="340" src="module14_files/25e8d326_552x340.jpg" style="border:0px; vertical-align: top" width="552"/></p><p class="figure-caption-below"><b>Figure </b><b>14</b><b>.</b><b>8</b><b>:</b> Serial communication system</p><p>The diagram shows several RS232 lines between the UART and the <b>modem</b> for handshaking (communication). RS232 C specifies 6 handshake signals but practically only 2 or 3 are actually used. The most common are:</p><ul class="lib"><li><p>Request to Send (RTS) (generated by UART and sent to modem)</p></li><li><p>Clear to Send (CTS) (generated by-modem and sent to UART)<br/></p></li></ul><h2><a id="id32" name="id32"><!--id32--></a>14.4.2 Modem frequencies</h2><p>Typically modems use frequencies:</p><p>Mark (Logic 1) = 1270 Hz</p><p>Space (Logic 0) = 1070 Hz</p><p>for originating modems</p><p>and Logic 1 = 2225 Hz</p><p>Logic 0 = 2025 Hz for answer modems.</p><p>These two allocations of frequencies allow full duplex if required.</p><p/><div class="Table35" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table35 selfassessment" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table35_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics30"><!-- --></a><img alt="graphics30" class="fr2" height="57" src="module14_files/74f1452e_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table35_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id33" name="id33"><!--id33--></a>Self assessment </h6><ol class="lin" style="list-style: decimal;"><li><p>List four (4) commonly used RS-232 handshaking signals. Give the mnemonic for each and explain their use.</p></li></ol></td></tr></tbody></table></div><p/></div>