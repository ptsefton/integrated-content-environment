<div><h1><a id="id2" name="id2"><!--id2--></a>Module 2 overview</h1><p>Switching circuits and logic elements are the building blocks of logic systems.  This can be seen in the following concept map.</p><p class="P7"><a href="http://localhost:8000/rep.test-content/packages/ele_1301_s1/media/resources/cmap/comb_logic_design.html">Combinational logic design (concept map)</a></p><h1><a id="id3" name="id3"><!--id3--></a>Objectives</h1><p class="P13">At the completion of this module you will be able to:</p><ul class="lib"><li><p>describe switches and their operation in electronic circuits</p></li><li><p>show how switching circuit theory may be implemented by logic gates</p></li><li><p>describe AND, OR, NOT, NAND, and NOR gates and define their operation with truth tables</p></li><li><p>define switch bounce and show its effects on logic systems.<br/></p></li></ul><h1><a id="id5" name="id5"><!--id5--></a>2.1 Switches</h1><p>All computer systems are based on logic. Logic may be defined in several ways but in this context we mean logic as the <span class="spCh spChx2018">&#x2018;</span>ordered interpretation of a series of switched signals<span class="spCh spChx2019">&#x2019;</span>. The signals are usually a fixed level DC voltage and the switching may be achieved manually by depressing a key (switch) on a computer keyboard, or automatically by an electronic circuit (logic gate) inside the computer itself.</p><p>The switching may be slow, for example one keystroke per second such as a student typing in an assignment, or fast, for example twenty million per second such as a logic gate processing a signal.</p><p>Let us examine some of these switches and see how they are related to logic systems. It is important for you to realise that a computer, no matter what type or complexity, is composed of millions of switches arranged in various combinations, to achieve many different functions.</p><h1><a id="id6" name="id6"><!--id6--></a>2.2 Switch types</h1><p>The most basic of switches is a mechanical device consisting of two contacts either held together or apart by a spring.</p><div class="Table6" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table6" style="border-spacing: 0;empty-cells: show; width:14.506cm; border-collapse: collapse; "><colgroup><col style="width:7.38cm;"/><col style="width:7.126cm;"/></colgroup><tbody><tr><td class="Table6_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p class="P16"><a name="graphics2"><!-- --></a><img alt="graphics2" class="fr1" height="127" src="module02_files/6c891231_259x127.jpg" style="border:0px; vertical-align: top" width="259"/></p></td><td class="Table6_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p class="P4">Pressure applied to the push button overcomes the mechanical force of the spring and the contacts move together (close) and if the switch was connected in a circuit, current could flow from one contact to the other.</p></td></tr></tbody></table></div><p/><p class="P8">Several terms are used to describe the operation of switches e.g. the switch shown here is normally <span class="spCh spChx2018">&#x2018;</span>OFF<span class="spCh spChx2019">&#x2019;</span> and is only <span class="spCh spChx2018">&#x2018;</span>ON<span class="spCh spChx2019">&#x2019;</span> when manually pressed. Other terms for ON and OFF are <span class="spCh spChx2018">&#x2018;</span>CLOSED<span class="spCh spChx2019">&#x2019;</span> and <span class="spCh spChx2018">&#x2018;</span>OPEN<span class="spCh spChx2019">&#x2019;</span>, <span class="spCh spChx2018">&#x2018;</span>ENABLED<span class="spCh spChx2019">&#x2019;</span> and <span class="spCh spChx2018">&#x2018;</span>DISABLED<span class="spCh spChx2019">&#x2019;</span> or even a <span class="spCh spChx2018">&#x2018;</span>TRUE<span class="spCh spChx2019">&#x2019;</span> or <span class="spCh spChx2018">&#x2018;</span>FALSE<span class="spCh spChx2019">&#x2019;</span> condition may be said to exist.</p><p>The electrical symbol for a switch usually only depicts the contact set in its relaxed or <span class="spCh spChx2018">&#x2018;</span>rest<span class="spCh spChx2019">&#x2019;</span> state. Here are some typical switch symbols.</p><p class="indent"><a name="graphics3"><!-- --></a><img alt="graphics3" class="fr1" height="95" src="module02_files/m1b48e5f8_340x95.jpg" style="border:0px; vertical-align: top" width="340"/></p><p>Operation of a switch is historically called <span class="spCh spChx2018">&#x2018;</span><b>throw</b><span class="spCh spChx2019">&#x2019;</span>. For example this is called a Single Pole, Single Throw switch and is abbreviated in circuit diagrams to a SPST switch.</p><p>Here is another type of switch:</p><p class="indent"><a name="graphics4"><!-- --></a><img alt="graphics4" class="fr1" height="106" src="module02_files/531e42c2_420x106.jpg" style="border:0px; vertical-align: top" width="420"/></p><p>This is a Double Pole Single Throw switch or DPST.</p><p>Yet another type is:</p><p class="indent"><a name="graphics5"><!-- --></a><img alt="graphics5" class="fr1" height="97" src="module02_files/f23c980_450x97.jpg" style="border:0px; vertical-align: top" width="450"/></p><p>This is a Single Pole Double Throw or SPDT switch.</p><h1><a id="id7" name="id7"><!--id7--></a>2.3 Switching circuits</h1><h2><a id="id8" name="id8"><!--id8--></a>2.3.1 Series switches</h2><p class="P13">In this circuit we have a <span class="spCh spChx2018">&#x2018;</span>source<span class="spCh spChx2019">&#x2019;</span> of energy connected to a load via three SPST switches in series.</p><p><a name="graphics6"><!-- --></a><img alt="graphics6" class="fr1" height="98" src="module02_files/m40514aa8_547x98.jpg" style="border:0px; vertical-align: top" width="547"/></p><div class="Table7" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table7" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:1.997cm;"/><col style="width:12.605cm;"/></colgroup><tbody><tr><td style="vertical-align: top; "><p>Statement:<br/>&#xA0;</p></td><td style="vertical-align: top; "><p>The load is <span class="spCh spChx2018">&#x2018;</span>enabled<span class="spCh spChx2019">&#x2019;</span> (i.e. connected to the source) only if we have switches A and B and C all <span class="spCh spChx2018">&#x2018;</span>activated<span class="spCh spChx2019">&#x2019;</span> (i.e. switched on).</p></td></tr></tbody></table></div><p/><h2><a id="id9" name="id9"><!--id9--></a>2.3.2 Logic representation</h2><p>If we consider the operation of the first switch as:&#xA0;&#xA0;&#xA0;A = ON&#xA0;&#xA0;&#xA0;and&#xA0;&#xA0;&#xA0;NOT&#xA0;&#xA0;A&#xA0;&#xA0;=&#xA0;&#xA0;OFF&#xA0;&#xA0;=&#xA0;&#xA0;<a name="Object3"><!-- --></a><img alt="Object3" class="fr8" height="20" src="module02_files/m487ac141_16x20bw.png" style="border:0px; vertical-align: middle" width="16"/></p><p> and so on for the other switches, we can see the load is connected to the source only during the conditions:</p><div class="Table8" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table8" style="border-spacing: 0;empty-cells: show; margin-left:0cm; margin-right:8.08cm; width:6.521cm; border-collapse: collapse; "><colgroup><col style="width:0.743cm;"/><col style="width:0.766cm;"/><col style="width:1.462cm;"/><col style="width:0.998cm;"/><col style="width:1.531cm;"/><col style="width:1.021cm;"/></colgroup><tbody><tr><td style="vertical-align: top; "><p class="center"/></td><td style="vertical-align: top; "><p class="center">A</p></td><td style="vertical-align: top; "><p class="center">AND</p></td><td style="vertical-align: top; "><p class="center">B</p></td><td style="vertical-align: top; "><p class="center">AND</p></td><td style="vertical-align: top; "><p class="center">C</p></td></tr></tbody></table></div><p/><p>In logic terminology this is written</p><div class="Table9" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table9" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:0.718cm;"/><col style="width:0.767cm;"/><col style="width:1.254cm;"/><col style="width:1.021cm;"/><col style="width:1.207cm;"/><col style="width:1.021cm;"/><col style="width:8.613cm;"/></colgroup><tbody><tr><td style="vertical-align: top; "><p/></td><td style="vertical-align: top; "><p class="center">A</p></td><td style="vertical-align: top; "><p class="center"><b><span class="T3"><span class="spCh spChx2219">&#x2219;</span></span></b></p></td><td style="vertical-align: top; "><p class="center">B</p></td><td style="vertical-align: top; "><p class="center"><b><span class="T3"><span class="spCh spChx2219">&#x2219;</span></span></b></p></td><td style="vertical-align: top; "><p class="center">C</p></td><td style="vertical-align: top; "><p>Where&#xA0;the&#xA0;symbol&#xA0;<span class="spCh spChx2018">&#x2018;</span>.<span class="spCh spChx2019">&#x2019;</span>&#xA0;equals&#xA0;the&#xA0;<span class="spCh spChx2018">&#x2018;</span>AND<span class="spCh spChx2019">&#x2019;</span>&#xA0;function.</p></td></tr></tbody></table></div><p/><p>For 3 switches, each with 2 possible states (i.e. <b>on</b> or <b>off</b>) we will have 8 possible combinations, usually presented in tabular form called a <span class="spCh spChx2018">&#x2018;</span>truth table<span class="spCh spChx2019">&#x2019;</span>.</p><h2><a id="id10" name="id10"><!--id10--></a>2.3.3 Truth tables</h2><p>In logic work it is usual to indicate the <b>on</b> or <span class="spCh spChx2018">&#x2018;</span>True<span class="spCh spChx2019">&#x2019;</span> condition as <b>logic one</b> (1) and the <b>off</b> or <span class="spCh spChx2018">&#x2018;</span>False<span class="spCh spChx2019">&#x2019;</span> condition as <b>logic zero</b> (0).</p><p>We can then write a table of all possible combinations or conditions for a system. It is called a <b>truth table</b>. It is a statement defining all possible <b>inputs</b> and all possible <b>outputs</b> for a logic system.</p><p class="P8">In this case a truth table would be:</p><p><a name="graphics7"><!-- --></a><img alt="graphics7" class="fr1" height="280" src="module02_files/770d1bca_530x280.jpg" style="border:0px; vertical-align: top" width="530"/></p><h2><a id="id11" name="id11"><!--id11--></a>2.3.4 Logic gates</h2><p>This situation is used many times in logic circuits so a special electronic device is manufactured to do the task. Its called an <b>AND gate</b>.</p><p class="indent"><a name="graphics8"><!-- --></a><img alt="graphics8" class="fr2" height="106" src="module02_files/m51c849b1_271x106.jpg" style="border:0px; vertical-align: top" width="271"/></p><p>Usually 3 or 4 of these gates are packaged in one integrated circuit (IC). It is normal to have 2 or 3 or more inputs to any one AND gate.</p><p>We can write a logic equation for this gate:</p><div class="Table10" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table10" style="border-spacing: 0;empty-cells: show; margin-left:0.863cm; margin-right:8.493cm; width:5.246cm; border-collapse: collapse; "><colgroup><col style="width:0.72cm;"/><col style="width:0.766cm;"/><col style="width:0.72cm;"/><col style="width:0.79cm;"/><col style="width:0.766cm;"/><col style="width:0.72cm;"/></colgroup><tbody><tr><td style="vertical-align: top; "><p class="center">F</p></td><td style="vertical-align: top; "><p class="center">=</p></td><td style="vertical-align: top; "><p class="center">A</p></td><td style="vertical-align: top; "><p class="center"><b><span class="T3"><span class="spCh spChx2219">&#x2219;</span></span></b></p></td><td style="vertical-align: top; "><p class="center">B</p></td><td style="vertical-align: top; "><p class="center"><b><span class="T3"><span class="spCh spChx2219">&#x2219;</span></span></b></p></td><td style="vertical-align: top; "><p class="center">C</p></td></tr></tbody></table></div><p/><p>Often for convenience the <span class="spCh spChx2018">&#x2018;</span><b>.</b><span class="spCh spChx2019">&#x2019;</span> symbol is omitted and we write:</p><p class="indent"><a name="graphics9"><!-- --></a><img alt="graphics9" class="fr1" height="43" src="module02_files/m23a2f51e_141x43.jpg" style="border:0px; vertical-align: top" width="141"/></p><h2><a id="id12" name="id12"><!--id12--></a>2.3.5 Parallel switches</h2><p class="P13">Now consider these switches:</p><p><a name="graphics10"><!-- --></a><img alt="graphics10" class="fr1" height="127" src="module02_files/3fb724e9_546x127.jpg" style="border:0px; vertical-align: top" width="546"/></p><p>In this case, the load is energised if we activate:</p><div class="Table11" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table11" style="border-spacing: 0;empty-cells: show; margin-left:0.653cm; margin-right:8.982cm; width:4.967cm; border-collapse: collapse; "><colgroup><col style="width:0.743cm;"/><col style="width:1.508cm;"/><col style="width:0.72cm;"/><col style="width:1.254cm;"/><col style="width:0.743cm;"/></colgroup><tbody><tr><td style="vertical-align: top; "><p class="center">A</p></td><td style="vertical-align: top; "><p class="center">OR</p></td><td style="vertical-align: top; "><p class="center">B</p></td><td style="vertical-align: top; "><p class="center">OR</p></td><td style="vertical-align: top; "><p class="center">C</p></td></tr></tbody></table></div><p/><p>In logic terminology this is written:</p><div class="Table12" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table12" style="border-spacing: 0;empty-cells: show; margin-left:0.676cm; margin-right:2.693cm; width:11.232cm; border-collapse: collapse; "><colgroup><col style="width:0.72cm;"/><col style="width:0.811cm;"/><col style="width:0.975cm;"/><col style="width:0.998cm;"/><col style="width:0.743cm;"/><col style="width:6.985cm;"/></colgroup><tbody><tr><td style="vertical-align: top; "><p class="center">A</p></td><td style="vertical-align: top; "><p class="center">+</p></td><td style="vertical-align: top; "><p class="center">B</p></td><td style="vertical-align: top; "><p class="center">+</p></td><td style="vertical-align: top; "><p class="center">C</p></td><td style="vertical-align: top; "><p>where + = the <span class="spCh spChx2018">&#x2018;</span>OR<span class="spCh spChx2019">&#x2019;</span> function.</p></td></tr></tbody></table></div><p/><p>Again we have 8 possible conditions hence the truth table is:</p><p class="indent"><a name="graphics11"><!-- --></a><img alt="graphics11" class="fr1" height="227" src="module02_files/m587478bb_259x227.jpg" style="border:0px; vertical-align: top" width="259"/></p><p>A gate has also been manufactured for this facility called an OR gate.</p><p><a name="graphics12"><!-- --></a><img alt="graphics12" class="fr1" height="97" src="module02_files/m3e5ad7be_378x97.jpg" style="border:0px; vertical-align: top" width="378"/></p><p>The equation is:</p><p class="indent"><a name="graphics13"><!-- --></a><img alt="graphics13" class="fr2" height="36" src="module02_files/m217615b9_191x36.jpg" style="border:0px; vertical-align: top" width="191"/></p><h2><a id="id13" name="id13"><!--id13--></a>2.3.6 Combination switches</h2><p>Suppose we had a combination:</p><p><a name="graphics14"><!-- --></a><img alt="graphics14" class="fr1" height="335" src="module02_files/m72ec9dc1_545x335.jpg" style="border:0px; vertical-align: top" width="545"/></p><p>You can see the system is a combination OR, AND circuit for the source to energise the load.</p><p>We wish to produce a truth table for this arrangement.</p><p>It<span class="spCh spChx2019">&#x2019;</span>s best to break it down to 3 areas as shown in the dotted boxes.</p><div class="Table13" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table13" style="border-spacing: 0;empty-cells: show; width:12.231cm; border-collapse: collapse; "><colgroup><col style="width:1.471cm;"/><col style="width:1.727cm;"/><col style="width:0.568cm;"/><col style="width:0.79cm;"/><col style="width:7.675cm;"/></colgroup><tbody><tr><td class="Table13_A1" colspan="2" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>True&#xA0;conditions&#xA0;for</p></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p class="P5"><span class="spCh spChx2460">&#x2460;</span></p></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>are</p></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p><a name="Object7"><!-- --></a><img alt="Object7" class="fr3" height="24" src="module02_files/7e5ec8b0_125x24bw.png" style="border:0px; vertical-align: middle" width="125"/></p></td></tr><tr><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p/></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>and for</p></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p class="P5"><span class="spCh spChx2461">&#x2461;</span></p></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>are</p></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p class="P6"><a name="Object8"><!-- --></a><img alt="Object8" class="fr3" height="24" src="module02_files/m7d8fb85a_125x24bw.png" style="border:0px; vertical-align: middle" width="125"/></p></td></tr><tr><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p/></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>and for</p></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p class="P5"><span class="spCh spChx2462">&#x2462;</span></p></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>are</p></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p><a name="Object2"><!-- --></a><img alt="Object2" class="fr4" height="20" src="module02_files/69b24213_104x20bw.png" style="border:0px; vertical-align: middle" width="104"/></p></td></tr></tbody></table></div><p/><p>Now circuits <span class="T2"><span class="spCh spChx2460">&#x2460;</span></span> and <span class="T2"><span class="spCh spChx2461">&#x2461;</span></span> can be combined as an OR circuit:</p><p class="indent"><a name="Object1"><!-- --></a><img alt="Object1" class="fr5" height="20" src="module02_files/m4ab3e728_97x20bw.png" style="border:0px; vertical-align: top" width="97"/></p><p>We usually drop the <span class="spCh spChx2018">&#x2018;</span><b>.</b><span class="spCh spChx2019">&#x2019;</span> unless its necessary for some other reason.</p><p class="indent"><a name="Object5"><!-- --></a><img alt="Object5" class="fr6" height="19" src="module02_files/44528f6b_67x19bw.png" style="border:0px; vertical-align: top" width="67"/></p><p>This combined expression is now OR<span class="spCh spChx2019">&#x2019;</span>ed with <span class="T2"><span class="spCh spChx2462">&#x2462;</span></span> to give the final result:</p><p class="indent"><a name="Object6"><!-- --></a><img alt="Object6" class="fr7" height="23" src="module02_files/m4d37176f_99x23bw.png" style="border:0px; vertical-align: top" width="99"/></p><p>The truth table could then be constructed in two stages. Firstly the areas enclosed by the dotted lines, AND functions, and then each of these could be considered as the OR functions.</p><p><a name="graphics15"><!-- --></a><img alt="graphics15" class="fr2" height="313" src="module02_files/m4602e1a0_546x313.jpg" style="border:0px; vertical-align: top" width="546"/></p><p>The right hand column is really all that is required as it is the circuit output. The middle column is an intermediate stage included for the sake of clarity.</p><p><b>Note:</b> When drawing circuit diagrams the following conventions are always used.</p><p class="indent"><a name="graphics16"><!-- --></a><img alt="graphics16" class="fr1" height="98" src="module02_files/17166f8d_380x98.jpg" style="border:0px; vertical-align: top" width="380"/></p><h1><a id="id14" name="id14"><!--id14--></a>2.4 Other logic gates</h1><h2><a id="id15" name="id15"><!--id15--></a>2.4.1 The inverter</h2><p>Many logic systems may require the <b>inverse</b> of a function. An integrated circuit known as a logic inverter is available for this purpose. The symbol for an inverter is:</p><p class="indent"><a name="graphics17"><!-- --></a><img alt="graphics17" class="fr2" height="119" src="module02_files/m481664fc_351x119.jpg" style="border:0px; vertical-align: top" width="351"/></p><p>F is the inverse of A, or any other logic signal which may be applied to the inverter<span class="spCh spChx2019">&#x2019;</span>s input. Manufacturers usually package 6 of these inverters into the one integrated circuit. It is then known as a hex-inverter.</p><h2><a id="id16" name="id16"><!--id16--></a>2.4.2 The NAND gate</h2><p>An inverter may be placed immediately following an AND gate as shown in the diagram:</p><p class="indent"><a name="graphics18"><!-- --></a><img alt="graphics18" class="fr1" height="53" src="module02_files/m4911fe53_267x53.jpg" style="border:0px; vertical-align: top" width="267"/></p><p>The equation is:</p><p class="indent"><a name="graphics19"><!-- --></a><img alt="graphics19" class="fr1" height="37" src="module02_files/m4f2d10e9_149x37.jpg" style="border:0px; vertical-align: top" width="149"/></p><p>F is equal to the inverse of A and B. It is the NOT of the AND function</p><p>i.e.    NOT-AND    or    NAND for short</p><p>The NAND function is often required in logic design, so manufacturers provide logic designers with a NAND gate. Its symbol is:</p><p class="indent"><a name="graphics20"><!-- --></a><img alt="graphics20" class="fr2" height="52" src="module02_files/m22250136_183x52.jpg" style="border:0px; vertical-align: top" width="183"/></p><p><a name="graphics21"><!-- --></a><img alt="graphics21" class="fr2" height="38" src="module02_files/51c87afe_345x38.jpg" style="border:0px; vertical-align: top" width="345"/></p><p>The truth table is:</p><p class="indent"><a name="graphics22"><!-- --></a><img alt="graphics22" class="fr1" height="154" src="module02_files/m7c5bb560_202x154.jpg" style="border:0px; vertical-align: top" width="202"/></p><p>You can verify for yourself that this is the inverse of an AND function.</p><h2><a id="id17" name="id17"><!--id17--></a>2.4.3 The NOR gate</h2><p class="P13">A similar logic may be applied to the OR gate resulting in the NOT-OR or NOR gate.</p><p class="indent"><a name="graphics23"><!-- --></a><img alt="graphics23" class="fr1" height="53" src="module02_files/3acf9b89_266x53.jpg" style="border:0px; vertical-align: top" width="266"/><br/></p><p><a name="graphics24"><!-- --></a><img alt="graphics24" class="fr2" height="36" src="module02_files/m2da54aa5_330x36.jpg" style="border:0px; vertical-align: top" width="330"/></p><p>A commercial NOR gate is available which has the symbol:</p><p class="indent"><a name="graphics38"><!-- --></a><img alt="graphics38" class="fr1" height="60" src="module02_files/m2b5b475f_207x60.jpg" style="border:0px; vertical-align: top" width="207"/><br/></p><p><a name="graphics39"><!-- --></a><img alt="graphics39" class="fr1" height="44" src="module02_files/m1f86c331_473x44.jpg" style="border:0px; vertical-align: top" width="473"/></p><p>The truth table is:</p><p class="indent"><a name="graphics27"><!-- --></a><img alt="graphics27" class="fr1" height="151" src="module02_files/m17202752_199x151.jpg" style="border:0px; vertical-align: top" width="199"/></p><h2><a id="id18" name="id18"><!--id18--></a>2.4.4 Gate equivalents</h2><p class="P13">The basic logic operations of AND, OR and INVERT can be implemented using only NAND gates if required. Using NAND gates only it is possible to reduce the chip (integrated circuit) count of a logic system. This is often done to reduce the overall cost of a logic design. While the following diagrams illustrate the NAND equivalent of basic logic operation, this method of conversion is not often used in practice. In a later module you will discover a more efficient method to convert a logic circuit to its NAND equivalent. </p><p><a name="graphics28"><!-- --></a><img alt="graphics28" class="fr1" height="327" src="module02_files/m632a4d38_546x327.jpg" style="border:0px; vertical-align: top" width="546"/></p><p>In a similar way NOR gates can also be used to implement AND, OR and INVERT operations.</p><p><a name="graphics29"><!-- --></a><img alt="graphics29" class="fr1" height="333" src="module02_files/m10a38439_543x333.jpg" style="border:0px; vertical-align: top" width="543"/></p><h2><a id="id19" name="id19"><!--id19--></a>2.4.5 Integrated circuit packages</h2><p>Logic gates are manufactured as integrated circuit (IC) packages, with typically 14 pins. The 74 series is the cheapest and most popular today, and exist in many forms. A 14-pin dual-in-line (DIL) package may contain four, two-input, single-output gates, together with a ground and a positive power supply pin, as shown below.</p><p>Note, that as the number of gate inputs increase, the number of gates within the IC package must decrease. For example, a 3-input NAND gate requires 4 pins per gate (3 input and 1&#xA0;output), therefore the 14-pin DIL package only has enough pins for 3 of this type of gate.</p><p>When designing logic circuits, as will be done in module 4, the designer must be aware of the number and type of gates per IC package in order to make good use of the available gates. To reduce the IC count it may be necessary to substitute logic gates with an equivalent in order to implement a specific logic function. In this way fewer gates are wasted and fewer IC packages are required.</p><p>ICs must be orientated correctly when placed in a circuit. Pin 1 is at the bottom left of the DIL package, marked with a circle or dot on the top of the device, or with an indentation on the left-hand side viewed from the top. Physically, all 14-pin DIL packages look the same. It is the device number that differentiates the internal logic functions.</p><p>Pin-outs for a 74LS00, quad 2-input NAND integrated circuit</p><ol class="li-lower-alpha" style="list-style: lower-alpha;"><li><p>Location of logic circuits.</p></li><li><p>top view of the actual IC package.<br/></p></li></ol><p><a name="graphics30"><!-- --></a><img alt="graphics30" class="fr1" height="126" src="module02_files/m741cdfa8_547x126.jpg" style="border:0px; vertical-align: top" width="547"/></p><p>Pin-outs for a 74LS14, hex inverter integrated circuit.</p><p><a name="graphics31"><!-- --></a><img alt="graphics31" class="fr1" height="124" src="module02_files/288dd699_541x124.jpg" style="border:0px; vertical-align: top" width="541"/></p><h1><a id="id20" name="id20"><!--id20--></a>2.5 Switch bounce</h1><p class="P13">It is important to consider here the mechanical operation of a switch and the effects it may have on high speed digital electronic circuits, such as logic gates.</p><p>As we saw earlier a switch has contacts operated by a spring mechanism. From your knowledge of basic mechanics this mechanism consists of a mass (contacts) and spring assembly. When a mass connected to a spring has a force applied and removed (i.e. step input), it vibrates (i.e. oscillates) at a certain frequency until it comes to rest (i.e. damped oscillation). So a simple switch when operated <span class="spCh spChx2018">&#x2018;</span>on<span class="spCh spChx2019">&#x2019;</span> or <span class="spCh spChx2018">&#x2018;</span>off<span class="spCh spChx2019">&#x2019;</span>, behaves as a <b>second order system</b>.</p><p>Graphically we can draw the ideal characteristics of a perfect switch as it is operated <span class="spCh spChx2018">&#x2018;</span>ON<span class="spCh spChx2019">&#x2019;</span> and <span class="spCh spChx2018">&#x2018;</span>OFF<span class="spCh spChx2019">&#x2019;</span> controlling a DC. electrical signal.</p><p class="indent"><a name="graphics32"><!-- --></a><img alt="graphics32" class="fr1" height="200" src="module02_files/m2694dae0_382x200.jpg" style="border:0px; vertical-align: top" width="382"/></p><p class="P8">If we now look graphically at the response of a second order system to a step input we have:</p><p class="indent"><a name="graphics33"><!-- --></a><img alt="graphics33" class="fr1" height="215" src="module02_files/m5bb4c3e7_418x215.jpg" style="border:0px; vertical-align: top" width="418"/></p><p>This oscillatory response actually causes the switch contacts to vibrate, or open and close rapidly for a short period each time the switch is operated. The resulting electrical signal is then:</p><p><a name="graphics34"><!-- --></a><img alt="graphics34" class="fr2" height="180" src="module02_files/19ad8529_433x180.jpg" style="border:0px; vertical-align: top" width="433"/></p><p>It is clear there is a period of time (t), from when the switch is first activated until the mechanical oscillations (vibration) have been damped, when the switch output is uncertain. Practically the period of time (t) for most switches is very short, typically 15 to 20 ms. Note that time is relative to the situation being considered. 15 ms to a human is a very short period of time, however 15 ms to an electronic logic circuit (gate) is a very long time. A typical logic gate may be capable of switching at 15 MHz (15 million times a second). So you see if such a switch was connected to such a logic gate as just described, the logic gate would say to the switch <span class="spCh spChx2018">&#x2018;</span>make up your mind <span class="spCh spChx2013">&#x2013;</span> are you <span class="spCh spChx2018">&#x2018;</span>on<span class="spCh spChx2019">&#x2019;</span> or <span class="spCh spChx2018">&#x2018;</span>off<span class="spCh spChx2019">&#x2019;</span>?</p><p>This problem has to be remembered whenever switches or other mechanical devices involving contacts are connected to computers. There are several ways to overcome this problem and we will consider some of them in a later module.</p><div class="Table16" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table16 learning" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table16_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics35"><!-- --></a><img alt="graphics35" class="fr1" height="57" src="module02_files/m73656803_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table16_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id21" name="id21"><!--id21--></a>Activity <span class="T1">2</span><span class="T1">.</span><span class="T1">1</span></h6><ol class="lin" style="list-style: decimal;"><li><p>Explain the operation of AND and OR, NAND and NOR gates using switch analogies and truth tables.</p></li><li><p>Using diagrams describe the phenomenon known as switch bounce.</p></li><li><p>Refer to the ELE1301 course page on <span class="spCh spChx2018">&#x2018;</span>Study Desk<span class="spCh spChx2019">&#x2019;</span> and complete the following experiments:</p><ol class="li-lower-alpha" style="list-style: lower-alpha;"><li><p>Home experiment 2-1 <span class="spCh spChx2013">&#x2013;</span> Switches, lamps and inverters</p></li><li><p>Home experiment 2-2 <span class="spCh spChx2013">&#x2013;</span> AND, OR, NAND and NOR gates.</p></li></ol></li></ol></td></tr></tbody></table></div><p/><h1><a id="id22" name="id22"><!--id22--></a>2.6 Logic diagram variations</h1><p class="P13">Table 2.1 shows the variations between American and European standards for logic symbols.</p><p class="table-caption-below" style="keep-together:always; keep-with-next:always; "><b>Table </b><b>2</b><b>.</b><b>1</b><b>:</b> Various logic symbols</p><p><a name="graphics36"><!-- --></a><img alt="graphics36" class="fr1" height="609" src="module02_files/m1b58dc48_542x609.jpg" style="border:0px; vertical-align: top" width="542"/></p><h1><a id="id23" name="id23"><!--id23--></a>2.7 Common logic devices</h1><p><a name="graphics37"><!-- --></a><img alt="graphics37" class="fr2" height="722" src="module02_files/m3f513ac1_549x722.jpg" style="border:0px; vertical-align: top" width="549"/></p><p/></div>