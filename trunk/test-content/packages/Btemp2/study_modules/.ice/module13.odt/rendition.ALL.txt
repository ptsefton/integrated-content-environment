<?xml version="1.0"?>
<html><head><meta content="text/html; charset=UTF-8" http-equiv="Content-Type"/><title>Input/output techniques</title><style type="text/css">table {border-spacing: 0;empty-cells: show; }
.body .indent {margin-left: 25px;}
.body .hint {font-size: 1.4em; font-style: normal;font-weight:bolder;color: #00000;}
.spCh {font-family: 'Lucida Grande','Arial Unicode MS', sans-serif; font-size: 1.2em;}
span.underline {text-decoration:underline; }
table.Table6 {width:4.277cm; }
div.Table6 {width: 100%; margin: 0px; padding: 0px; }
th.Table6_A1, td.Table6_A1 {border:none; padding-bottom:0.101cm; padding-left:0cm; padding-right:0cm; padding-top:0.101cm; }
table.Table11 {width:14.601cm; }
div.Table11 {width: 100%; margin: 0px; padding: 0px; }
span.Table11_1 {keep-together:always; }
th.Table11_A1, td.Table11_A1 {border:none; padding:0cm; }
table.Table7 {margin-left:0.6cm; margin-right:7.325cm; width:4.674cm; }
div.Table7 {width: 100%; margin: 0px; padding: 0px; }
th.Table7_A1, td.Table7_A1 {border:none; padding-bottom:0.101cm; padding-left:0cm; padding-right:0cm; padding-top:0.101cm; }
table.Table24 {width:14.601cm; }
div.Table24 {width: 100%; margin: 0px; padding: 0px; }
span.Table24_1 {keep-together:always; }
th.Table24_A1, td.Table24_A1 {border:none; padding:0cm; }
table.Table30 {width:14.601cm; }
div.Table30 {width: 100%; margin: 0px; padding: 0px; }
span.Table30_1 {keep-together:always; }
th.Table30_A1, td.Table30_A1 {border:none; padding:0cm; }
table.Table9 {keep-with-next:always; width:25.762cm; }
div.Table9 {width: 100%; margin: 0px; padding: 0px; }
th.Table9_A1, td.Table9_A1 {border-bottom:0.018cm solid #000000; border-left:0.018cm solid #000000; border-right:none; border-top:0.018cm solid #000000; padding:0.097cm; }
th.Table9_F1, td.Table9_F1 {border:0.018cm solid #000000; padding:0.097cm; }
th.Table9_A2, td.Table9_A2 {border-bottom:0.018cm solid #000000; border-left:0.018cm solid #000000; border-right:none; border-top:none; padding:0.097cm; }
th.Table9_F2, td.Table9_F2 {border-bottom:0.018cm solid #000000; border-left:0.018cm solid #000000; border-right:0.018cm solid #000000; border-top:none; padding:0.097cm; }
table.Table10 {margin-left:0.6cm; margin-right:0.176cm; width:24.985cm; }
div.Table10 {width: 100%; margin: 0px; padding: 0px; }
table.Table12 {margin-left:0.6cm; width:13.54cm; }
div.Table12 {width: 100%; margin: 0px; padding: 0px; }
th.Table12_A1, td.Table12_A1 {border:none; padding:0.097cm; }
th.Table12_B1, td.Table12_B1 {border-bottom:0.018cm solid #000000; border-left:none; border-right:none; border-top:none; padding:0.097cm; }
th.Table12_B2, td.Table12_B2 {border-bottom:0.018cm solid #000000; border-left:0.018cm solid #000000; border-right:none; border-top:none; padding:0.097cm; }
th.Table12_J2, td.Table12_J2 {border-bottom:none; border-left:0.018cm solid #000000; border-right:none; border-top:none; padding:0.097cm; }
table.Table13 {margin-left:0.6cm; width:13.58cm; }
div.Table13 {width: 100%; margin: 0px; padding: 0px; }
th.Table13_A1, td.Table13_A1 {border:none; padding:0.097cm; }
th.Table13_B1, td.Table13_B1 {border-bottom:0.018cm solid #000000; border-left:none; border-right:none; border-top:none; padding:0.097cm; }
th.Table13_B2, td.Table13_B2 {border-bottom:0.018cm solid #000000; border-left:0.018cm solid #000000; border-right:none; border-top:none; padding:0.097cm; }
th.Table13_J2, td.Table13_J2 {border-bottom:none; border-left:0.018cm solid #000000; border-right:none; border-top:none; padding:0.097cm; }
table.Table14 {width:25.762cm; }
div.Table14 {width: 100%; margin: 0px; padding: 0px; }
th.Table14_A1, td.Table14_A1 {border-bottom:0.018cm solid #000000; border-left:0.018cm solid #000000; border-right:none; border-top:0.018cm solid #000000; padding:0.097cm; }
th.Table14_F1, td.Table14_F1 {border:0.018cm solid #000000; padding:0.097cm; }
th.Table14_A2, td.Table14_A2 {border-bottom:0.018cm solid #000000; border-left:0.018cm solid #000000; border-right:none; border-top:none; padding:0.097cm; }
th.Table14_F2, td.Table14_F2 {border-bottom:0.018cm solid #000000; border-left:0.018cm solid #000000; border-right:0.018cm solid #000000; border-top:none; padding:0.097cm; }
table.Table15 {width:14.601cm; }
div.Table15 {width: 100%; margin: 0px; padding: 0px; }
span.Table15_1 {keep-together:always; }
th.Table15_A1, td.Table15_A1 {border:none; padding:0cm; }
table.Table8 {width:14.601cm; }
div.Table8 {width: 100%; margin: 0px; padding: 0px; }
span.Table8_1 {keep-together:always; }
th.Table8_A1, td.Table8_A1 {border:none; padding:0cm; }
table.Table16 {margin-left:0.6cm; margin-right:2.757cm; width:22.405cm; }
div.Table16 {width: 100%; margin: 0px; padding: 0px; }
th.Table16_A1, td.Table16_A1 {border:none; padding:0.097cm; }
th.Table16_B1, td.Table16_B1 {border-bottom:0.018cm solid #000000; border-left:none; border-right:none; border-top:none; padding:0.097cm; }
th.Table16_B2, td.Table16_B2 {border-bottom:0.018cm solid #000000; border-left:0.018cm solid #000000; border-right:none; border-top:none; padding:0.097cm; }
th.Table16_E2, td.Table16_E2 {border-bottom:0.018cm solid #000000; border-left:0.018cm solid #000000; border-right:0.018cm solid #000000; border-top:none; padding:0.097cm; }
table.Table26 {width:14.601cm; }
div.Table26 {width: 100%; margin: 0px; padding: 0px; }
span.Table26_1 {keep-together:always; }
th.Table26_A1, td.Table26_A1 {border:none; padding:0cm; }
table.Table25 {width:14.601cm; }
div.Table25 {width: 100%; margin: 0px; padding: 0px; }
span.Table25_1 {keep-together:always; }
th.Table25_A1, td.Table25_A1 {border:none; padding:0cm; }
table.Table20 {keep-with-next:always; width:3.528cm; }
div.Table20 {width: 100%; margin: 0px; padding: 0px; }
th.Table20_A1, td.Table20_A1 {border:none; padding-bottom:0.101cm; padding-left:0cm; padding-right:0cm; padding-top:0.101cm; }
table.Table21 {margin-left:0cm; margin-right:10.015cm; width:15.746cm; }
div.Table21 {width: 100%; margin: 0px; padding: 0px; }
th.Table21_A1, td.Table21_A1 {border:none; padding-bottom:0.101cm; padding-left:0cm; padding-right:0cm; padding-top:0.101cm; }
table.Table22 {margin-left:0cm; margin-right:10.301cm; width:15.46cm; }
div.Table22 {width: 100%; margin: 0px; padding: 0px; }
th.Table22_A1, td.Table22_A1 {border:none; padding-bottom:0.101cm; padding-left:0cm; padding-right:0cm; padding-top:0.101cm; }
table.Table18 {width:14.601cm; }
div.Table18 {width: 100%; margin: 0px; padding: 0px; }
span.Table18_1 {keep-together:always; }
th.Table18_A1, td.Table18_A1 {border:none; padding:0cm; }
table.Table17 {width:14.601cm; }
div.Table17 {width: 100%; margin: 0px; padding: 0px; }
span.Table17_1 {keep-together:always; }
th.Table17_A1, td.Table17_A1 {border:none; padding:0cm; }
table.Table19 {width:100%; }
div.Table19 {width: 100%; margin: 0px; padding: 0px; }
Header_20_right.P1 {margin-bottom:0cm; margin-top:0cm; }
Header_20_left.P3 {font-weight:normal; }
p.P4 {text-align:start; }
p.P5 {font-size:10pt; }
p.P6 {text-align:start; }
p.P8 {keep-with-next:always; }
h2n.P9 {keep-together:always; keep-with-next:always; }
h1.P10 {keep-together:always; keep-with-next:always; }
h1n.P11 {keep-together:always; keep-with-next:always; }
p-indent.P12 {keep-with-next:always; }
p.P14 {keep-with-next:always; }
p.P15 {break-after:auto; }
p.P16 {keep-with-next:always; }
p.P17 {keep-together:always; keep-with-next:always; }
p.P18 {keep-with-next:always; text-align:start; }
li1a.P19 {keep-with-next:always; }
li1b.P20 {keep-with-next:always; }
li1b.P21 {keep-together:always; keep-with-next:always; }
p-indent.P22 {keep-with-next:always; }
span.T1 {font-size: smaller; vertical-align: sub; }</style></head><body><h1><a id="id2" name="id2"><!--id2--></a>Overview</h1><p><a href="http://localhost:8000/rep.test-content/packages/ele_1301_s1/media/resources/cmap/micro_architecture.html">Microcomputer architecture (concept map)</a></p><p><a href="http://localhost:8000/rep.test-content/packages/ele_1301_s1/media/resources/cmap/peripheral_comms.html">Peripheral communications (concept map)</a></p><h1><a id="id3" name="id3"><!--id3--></a>Objectives</h1><p class="P17">At the completion of this module you will be able to:</p><ul class="lib"><li><p>explain the concepts involved in interfacing a microprocessor to a peripheral device</p></li><li><p>describe how the keypad and display are interfaced to a typical microprocessor</p></li><li><p>demonstrate an understanding of programming techniques used to drive a typical peripheral device</p></li><li><p>explain the principles used to achieve analog-to-digital and digital-to-analog conversion</p></li><li><p>describe Direct Memory Access (DMA) and explain its use in CPU operation</p></li><li><p>demonstrate a knowledge of interrupts and show how they may be detected, prioritised, initiated and handled by a CPU.<br/></p></li></ul><h1><a id="id5" name="id5"><!--id5--></a>13.1 Introduction</h1><p>All modern microcomputers are <span class="spCh spChx2018">&#x2018;</span>bus structured<span class="spCh spChx2019">&#x2019;</span> systems. They basically have three buses and these are:</p><ul class="lib"><li><p>a unidirectional Address Bus (16 or more lines)</p></li><li><p>a bidirectional Data Bus where the number of lines equals the word size of the computer, e.g. 8 lines. This bus is used for all data transfer <span class="spCh spChx2018">&#x2018;</span>in<span class="spCh spChx2019">&#x2019;</span> and <span class="spCh spChx2018">&#x2018;</span>out<span class="spCh spChx2019">&#x2019;</span> of the CPU.</p></li><li><p>a control bus, which consists of a number of control lines. These will include clock signals, control signals from the CPU to devices connected to the bus, e.g. Read/Write, request and acknowledge lines which are inputs to the CPU and are activated by devices connected to the buses.<br/></p></li></ul><p>To design a microprocessor system, the elements that comprise the system are all interfaced to the microprocessor using the address, data and control buses.</p><p>The structure of the buses supplied by the various makes of microprocessors is non-standard. In the past, a limiting feature with microprocessor design was the constraints provided by a standard 40 pin dual-in-line package. Today, ICs are being produced in 40 plus pin packages, but still there are limitations. Manufacturer must decide how best to utilise the limited number of pins. In many cases I/O pins serve a dual purpose, e.g. input/output (software configured) on the same pin.</p><p>A basic block diagram showing the bus connections of a typical microcomputer system is provided in figure 13<span class="spCh spChx2013">&#x2013;</span>1.</p><p><a name="graphics2"><!-- --></a><img alt="graphics2" class="fr1" height="638" src="module13_files/m1a3280d7_545x638.jpg" style="border:0px; vertical-align: top" width="545"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>1</b><b>:</b> Microcomputer system</p><p>Figure 13.1 shows it is most common to connect anything external (i.e. peripheral) to a microprocessor (MPU) through an interface device. This is done so that the transfer of data to/from the peripheral can be program controlled.</p><p class="P8">This is achieved classically in two ways:</p><p><a name="graphics3"><!-- --></a><img alt="graphics3" class="fr1" height="312" src="module13_files/63fb0053_552x312.jpg" style="border:0px; vertical-align: top" width="552"/></p><p>In some situations it is possible to have the peripheral directly access the memory to speed up certain operations. This is known as Direct Memory Access (DMA) and will be discussed later. </p><p>In both cases there is a need for an I/O interface between the peripheral device and the computer bus. The device takes a variety of forms, one example being the Motorola <span class="spCh spChx2018">&#x2018;</span>Peripheral Interface Adaptor (PIA)<span class="spCh spChx2019">&#x2019;</span>. This device is separate to the MPU.</p><p>Motorola used the PIA approach for the early MC6800 series of microprocessors. More recently, to reduce circuit size and complexity, Motorola developed the MC68HC11 series of micro-controllers, which are totally integrated. The micro-controller includes, within the one integrated circuit package a microprocessor, RAM and ROM memory, peripheral I/O hardware and a timer system. </p><p>Before discussing the peripheral interface in detail it is important to understand how device registers outside the MPU (e.g. PIA registers) are accessed.</p><h1><a id="id6" name="id6"><!--id6--></a>13.2 I/O addressing</h1><p>So far, the term <span class="spCh spChx2018">&#x2018;</span>register<span class="spCh spChx2019">&#x2019;</span> has been used to refer to a data storage unit within the MPU. These MPU registers are accessed (addressed) via opcodes, e.g. LDAA #$04. However, many more registers exist within a microcomputer system to provide; RAM and ROM; I/O and Timer functions. These registers cannot be accessed directly via opcodes. Instead, they must be accessed by a unique address placed on the address bus. Data can then be written to or read from that address when the MPU issues a read/write request. As these registers store data, they are called the systems <span class="spCh spChx2018">&#x2018;</span>memory<span class="spCh spChx2019">&#x2019;</span>.</p><p>e.g. LDAA $0004. This instruction loads the contents of memory address $0004 into the MPU accumulator A register.</p><p>Blocks of memory locations are often reserved for specific purposes such as; ROM and RAM; I/O control and Data; etc. Once assigned to a specific purpose those memory locations cannot be used for any other purpose, e.g. locations $0000 to $003F are reserved for the <span class="spCh spChx2018">&#x2018;</span>68HC11<span class="spCh spChx2019">&#x2019;</span>s I/O registers.</p><p>Motorola microprocessors communicate with I/O hardware as if it were memory. That is, the I/O hardware occupies one or more locations within the systems memory, as shown above. This I/O interface technique is called <span class="spCh spChx2018">&#x2018;</span>memory mapped I/O<span class="spCh spChx2019">&#x2019;</span>. The same instructions used to transfer data to and from memory are used for I/O communications, e.g. LDAA $0000 and STAA $0001.</p><p><b>Memory map example</b></p><p class="table-caption-above"><b>Table </b><b>13</b><b>.</b><b>1</b><b>: </b>EZ-Micro memory map</p><p><a name="graphics4"><!-- --></a><img alt="graphics4" class="fr1" height="438" src="module13_files/9ee990d_552x438.jpg" style="border:0px; vertical-align: top" width="552"/></p><p/><h2><a id="id7" name="id7"><!--id7--></a>13.2.1 Address bus decoding</h2><p class="P17">Figure 13<span class="spCh spChx2013">&#x2013;</span>1 showed that a single microprocessor is able to communicate with many devices connected to its bus system. To select a device to communicate with, the microprocessor outputs the address of that device on the address bus. Through address bus decoding the device is enabled, allowing data exchange with the microprocessor.</p><p>The address bus may be partially or fully decoded depending on the application. Partial decoding is the preferred method as it costs less to implement. On the down side, partial decoding is wasteful of memory address space as one device register may occupy several address locations. To illustrate this point refer to the following diagram.</p><p><a name="graphics33"><!-- --></a><img alt="graphics33" class="fr2" height="226" src="module13_files/5b21480_543x226.jpg" style="border:0px; vertical-align: top" width="543"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>2</b><b>:</b> Partial address bus decoding</p><p>The 8-bit register, of figure 13-2, is enabled by addressing any location between 2000<sub>16</sub> and 23FF<sub>16</sub> (0010 00XX XXXX XXXX<sub>2</sub>). That is, all 1023<sub>10</sub> memory address locations are valid for this 8-bit register. Address lines A12, A13 and A14 are decoded to select one of the decoder<span class="spCh spChx2019">&#x2019;</span>s 8 output lines (in this case Y2). A10 and A11, together with the control bus (E) are used to enable the decoder chip. An active low (0) will appear on output line Y2 when:</p><div class="Table6" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table6" style="border-spacing: 0;empty-cells: show; width:4.277cm; border-collapse: collapse; "><colgroup><col style="width:2.801cm;"/><col style="width:1.476cm;"/></colgroup><tbody><tr><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>A12 (A)</p></td><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 0</p></td></tr><tr><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>A13 (B)</p></td><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 1</p></td></tr><tr><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>A14 (C)</p></td><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 0</p></td></tr><tr><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>A11 (OE2A)</p></td><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 0</p></td></tr><tr><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>A10 (OE2B)</p></td><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 0</p></td></tr><tr><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>E (OE1)</p></td><td class="Table6_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 1</p></td></tr></tbody></table></div><p/><p>Note, address lines marked X (don<span class="spCh spChx2019">&#x2019;</span>t care) are not decoded, therefore may be a 1 or 0.</p><p>The decoder<span class="spCh spChx2019">&#x2019;</span>s other seven outputs could be used to enable other 8-bit registers or peripheral devices requiring an enable from the microprocessor. For example, Y5 could be selected by placing 5000<sub>16</sub> to 53FF<sub>16</sub> (0101 00XX XXXX XXXX<sub>2</sub>) on the address bus.</p><div class="Table11" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table11 learning" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table11_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics6"><!-- --></a><img alt="graphics6" class="fr2" height="57" src="module13_files/m73656803_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table11_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id8" name="id8"><!--id8--></a>Activity <span class="T2">13</span><span class="T2">.</span><span class="T2">1</span></h6><p>Refer to figure 13<span class="spCh spChx2013">&#x2013;</span>2. Given the following logic levels:</p><div class="Table7" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table7" style="border-spacing: 0;empty-cells: show; margin-left:0.6cm; margin-right:7.325cm; width:4.674cm; border-collapse: collapse; "><colgroup><col style="width:2.778cm;"/><col style="width:1.896cm;"/></colgroup><tbody><tr><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>A10 (OE2B)</p></td><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 0</p></td></tr><tr><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>A11 (OE2A)</p></td><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 0</p></td></tr><tr><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>A12 (A)</p></td><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 0</p></td></tr><tr><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>A13 (B)</p></td><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 1</p></td></tr><tr><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>A14 (C)</p></td><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 1</p></td></tr><tr><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>A15</p></td><td class="Table7_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p> = 0</p></td></tr></tbody></table></div><p/><p>Determine the output enabled and the range of addresses decoded.</p></td></tr></tbody></table></div><p/><div class="Table24" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table24 note" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table24_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics40"><!-- --></a><img alt="graphics40" class="fr2" height="57" src="module13_files/1e014184_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table24_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id9" name="id9"><!--id9--></a>Note  - Answer to activity 13.1</h6><p>Y6, 6000<sub>16</sub> to 63FF<sub>16</sub></p><p>(0110 00XX XXXX XXXX)</p></td></tr></tbody></table></div><p/><div class="Table30" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table30 selfassessment" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table30_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics37"><!-- --></a><img alt="graphics37" class="fr2" height="57" src="module13_files/74f1452e_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table30_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id10" name="id10"><!--id10--></a><span class="T2">Self assessment </span><span class="T2">13.1</span></h6><ol class="lin" style="list-style: decimal;"><li><p>Describe and illustrate the concept of <span class="spCh spChx2018">&#x2018;</span>memory mapped I/O<span class="spCh spChx2019">&#x2019;</span>.</p></li><li><p>Explain what is meant by <span class="spCh spChx2018">&#x2018;</span>Address Bus Decoding<span class="spCh spChx2019">&#x2019;</span>. Include in your answer the advantages and disadvantages of <span class="spCh spChx2018">&#x2018;</span>partial<span class="spCh spChx2019">&#x2019;</span> decoding.</p></li><li><p>Explain the operation of the following address decoder circuit and determine the decoded address range to enable the Peripheral Device (logic 1).</p></li></ol><p class="P7"><span style="display: block"><a name="graphics31"><!-- --></a><img alt="graphics31" class="fr3" height="168" src="module13_files/32f58f21_454x168.jpg" style="border:0px; vertical-align: top" width="454"/></span></p></td></tr></tbody></table></div><p/><h1><a id="id11" name="id11"><!--id11--></a>13.3 The Motorola MC68HC11</h1><p>As previously mentioned, The MC68HC11 family (16 members based on pin configuration, amount and type of onboard memory) of micro-controllers has an internal structure that includes I/O hardware. This means that all buses connecting the microprocessor to the PIAs are internal and, in single-chip mode, all I/O registers occupy fixed memory addresses.</p><p>Any future reference to the MC68HC11 or <span class="spCh spChx2018">&#x2018;</span>HC11 will stand for the MC68HC11D3 version of this micro-controller family.</p><p>The <span class="spCh spChx2018">&#x2018;</span>HC11 has two modes of operation, <span class="spCh spChx2018">&#x2018;</span>single-chip<span class="spCh spChx2019">&#x2019;</span> and <span class="spCh spChx2018">&#x2018;</span>expanded mode<span class="spCh spChx2019">&#x2019;</span>. In single-chip mode the micro-controller uses only the resources contained within the chip to perform its function. In expanded mode the internal address, data and control buses are brought out to pins. In this way the micro-controller<span class="spCh spChx2019">&#x2019;</span>s functionality is greatly enhanced, albeit at the expense of two I/O ports used for address and data bus purposes.</p><p>The following block diagram depicts the internal organization of the <span class="spCh spChx2018">&#x2018;</span>HC11. This particular family member has 4 user configurable I/O ports; A, B, C and D. </p><p class="indent"><a name="graphics7"><!-- --></a><img alt="graphics7" class="fr1" height="389" src="module13_files/m47a26c7_514x389.jpg" style="border:0px; vertical-align: top" width="514"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>3</b><b>:</b> MC68HC11D3 block diagram</p><p><b>Port A</b> (address $0000) is a multi-purpose port sharing functions that include general purpose I/O, the main timer system, and the pulse accumulator system. Three pins are fixed input (PA0-PA2), three are fixed output (PA4-PA6) and two are bi-directional (PA3 and PA7).</p><p><b>Port B</b> (address $0004) is a general purpose I/O port, but can also be used as a high order address bus in expanded mode. Each I/O pin associated with port B can be configured as either input or output. </p><p><b>DDRB</b> (address $0006) As with the MC6821, configuring the I/O pins is done by setting bits in the data direction register B (DDRB). To configure a pin as an input, the corresponding bit in the DDRB is set to 0. To configure a pin as an output, the corresponding bit in the DDRB is set to 1.</p><p><b>Port C</b> (address $0003) is also a general purpose I/O port, but in the expanded mode can be used as a multiplexed low order address and data bus.</p><p><b>DDRC</b> (address $0007) As with Port B, the I/O pins of Port C are configured by setting the bits in the DDRC.</p><p><b>Port D</b> (address $0008) is also a general purpose I/O port, but in the expanded mode the pins take on a variety of control and data transfer roles, which will be explained in more detail later.</p><p><b>DDRD</b> (address $0009) As with other ports, the I/O pins of port D are configured by setting the bits in the DDRD.</p><h1><a id="id12" name="id12"><!--id12--></a>13.4 MC68HC11 parallel I/O</h1><p>As previously mentioned, the <span class="spCh spChx2018">&#x2018;</span>HC11 can be operated in <span class="spCh spChx2018">&#x2018;</span>single-chip<span class="spCh spChx2019">&#x2019;</span> or <span class="spCh spChx2018">&#x2018;</span>expanded<span class="spCh spChx2019">&#x2019;</span> modes of operation. Mode selection is normally hard wired by applying appropriate logic levels to pins MODA and MODB during reset.</p><h2><a id="id13" name="id13"><!--id13--></a>13.4.1 Single-chip mode</h2><p>Single-chip mode is the simplest configuration for applications requiring minimal program memory and maximum general-purpose parallel I/O availability. The MPU relies only on the internal resources of the chip and requires only a small number of external components for proper operation.</p><p>In this mode the address, data and control buses are contained within the chip as is; RAM and ROM; and I/O and Timer controls. User configured address decoding is not possible, so all memory addressed devices have fixed addresses, e.g. Port B data register occupies address $0004.</p><p>Handshaking pins are provided to control data transfers via the I/O ports. Data is latched in on the rising or falling edge of the signal on pin STRA (PD6/AS). The active edge of this signal is software selectable. STRB (PD7/R/W) to indicate to the MPU that valid data is available on a port configured for output.</p><p><b>Note</b> <span class="spCh spChx2013">&#x2013;</span> Pin STRA (PD6/AS) is an input in single-chip mode and an output in expanded mode. STRB (PD7/R/W) is an output in both modes.</p><h2><a id="id14" name="id14"><!--id14--></a>13.4.2 Expanded mode</h2><p>In expanded mode the address, data and control buses are brought out via the I/O ports. Ports B and C are used for address and data lines. This is made possible by assigning the high byte of the address to port B and the low byte to port C. The low byte of port C is time multiplexed with the data bus. Pins PD6/AS and PD7/R/W control the flow of information (address or data) through port C.</p><h2><a id="id15" name="id15"><!--id15--></a>13.4.3 Programming example 1 (based on the EZ-Micro development board)</h2><p class="P17">In this example the <span class="spCh spChx2018">&#x2018;</span>HC11 will output data to a seven segment LED display. It will be assumed that the <span class="spCh spChx2018">&#x2018;</span>HC11 is operating in the <b>expanded</b> mode and the seven segment display will occupy memory address $2000 to $23FF. Therefore, storing the appropriate data to address $2000 will cause the corresponding segments of the display to light.</p><p>The manufacturers data on the seven segment display advise that a logic <span class="spCh spChx2018">&#x2018;</span>0<span class="spCh spChx2019">&#x2019;</span> applied to any of the segments <span class="spCh spChx2018">&#x2018;</span>a<span class="spCh spChx2019">&#x2019;</span> to <span class="spCh spChx2018">&#x2018;</span>g<span class="spCh spChx2019">&#x2019;</span> will cause the segment to light, assuming the display<span class="spCh spChx2019">&#x2019;</span>s common anode is a logic <span class="spCh spChx2018">&#x2018;</span>1<span class="spCh spChx2019">&#x2019;</span>. A BCD to 7-segment display decoder will be used to drive the display. The input to the display decoder will be connected to the <span class="spCh spChx2018">&#x2018;</span>HC11 data bus and each decoder output will drive one segment of the display. So placing the required number on the data bus will cause the appropriate segments to light when the display decoder is enabled. </p><p>To enable the display decoder the address of the display must appear on the address bus. The address is then decoded, as shown in figure 13.2. The address decoder output is then used to enable the display decoder. The segments will light briefly, in fact, to briefly to be seen. For this reason the display must be repeatedly written to. In this way our brain <span class="spCh spChx2018">&#x2018;</span>sees<span class="spCh spChx2019">&#x2019;</span> the display as being continuously lit.</p><p class="indent"><a name="graphics34"><!-- --></a><img alt="graphics34" class="fr2" height="282" src="module13_files/m6a19b36_405x282.jpg" style="border:0px; vertical-align: top" width="405"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>4</b><b>:</b> MC68HC11D3 block diagram</p><p>Suppose we now wish to program the system to display the decimal number 3 on the display for a period of 1 second and then turn it off.</p><p class="P8">The flow chart is:</p><p class="indent"><a name="graphics10"><!-- --></a><img alt="graphics10" class="fr2" height="446" src="module13_files/401f8a75_276x446.jpg" style="border:0px; vertical-align: top" width="276"/></p><p>The memory map is:</p><p><a name="graphics11"><!-- --></a><img alt="graphics11" class="fr1" height="215" src="module13_files/17df4f95_517x215.jpg" style="border:0px; vertical-align: top" width="517"/></p><p class="P8">The program listing for the EZ-Micro development board is:</p><div class="Table9" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table9" style="border-spacing: 0;empty-cells: show; keep-with-next:always; width:25.762cm; border-collapse: collapse; border: 1.0px solid #000000"><colgroup><col style="width:3.23cm;"/><col style="width:3.812cm;"/><col style="width:3.501cm;"/><col style="width:3.969cm;"/><col style="width:3.579cm;"/><col style="width:7.669cm;"/></colgroup><tbody><tr><td class="Table9_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Address</b></p></td><td class="Table9_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Opcode</b></p></td><td class="Table9_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Label</b></p></td><td class="Table9_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Mnemonic</b></p></td><td class="Table9_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p class="center"><b>Operand</b></p></td><td class="Table9_F1" style="vertical-align: top;  border:1.0px solid #000000;  padding:0.097cm; "><p><b>Comment</b></p></td></tr><tr><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">2000</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">LED1</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">EQU</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">$2000</p></td><td class="Table9_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Address of display</p></td></tr><tr><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1000</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">ORG</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">$1000</p></td><td class="Table9_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Program start</p></td></tr><tr><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1000</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">86 03</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">START</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">LDAA</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">#03</p></td><td class="Table9_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Number to be displayed</p></td></tr><tr><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1002</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">C6 05</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">LDAB</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">#05</p></td><td class="Table9_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Counter for loop 5</p></td></tr><tr><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1004</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">CE AD 9C</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">LOOP2</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">LDX</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">#$AD9C</p></td><td class="Table9_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Counter&#xA0;for&#xA0;0.2sec&#xA0;delay</p></td></tr><tr><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1007</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">B7 20 00</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">LOOP1</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">STAA</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">LED1</p></td><td class="Table9_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Display number</p></td></tr><tr><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">100A</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">09</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">DEX</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table9_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Decrement counter 1</p></td></tr><tr><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">100B</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">26 FA</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">BNE</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">LOOP1</p></td><td class="Table9_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Refresh display</p></td></tr><tr><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">100D</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">5A</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">DECB</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table9_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Decrement counter 2</p></td></tr><tr><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">100E</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">26 F4</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">BNE</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">LOOP2</p></td><td class="Table9_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Display (0.2 x 5 sec)</p></td></tr><tr><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1010</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">7E 10 10</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">HALT</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">JMP</p></td><td class="Table9_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">HALT</p></td><td class="Table9_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p/></td></tr></tbody></table></div><p/><h2><a id="id16" name="id16"><!--id16--></a>13.4.4 Programming example 2 (based on the THRSimll software)</h2><p>In this example the <span class="spCh spChx2018">&#x2018;</span>HC11 will again output data to a seven segment LED display. However, in this example the <span class="spCh spChx2018">&#x2018;</span>HC11 will be operating in <b>single-chip</b> mode. In this mode the <span class="spCh spChx2018">&#x2018;</span>HC11 is connected directly to the LED display, i.e. the external display decoder and the address decoder are not used. This mode of operation reduces circuit complexity, however, it requires a little more program code to setup the output ports to achieve the same result.</p><p class="indent"><a name="graphics5"><!-- --></a><img alt="graphics5" class="fr2" height="153" src="module13_files/79ae76a_313x153.jpg" style="border:0px; vertical-align: top" width="313"/></p><p>Port B (address $0004) will be used to drive the display segments, so the I/O pins associated with port B will need to be set for output. This is done by setting the all bits of DDRB ($0006) to a logic 1 ($FF). Each output pin of port B will then be used to drive one segment of the LED display.</p><p>Port C (address $0003) will be used to enable (illuminate) the display, so one I/O pin associated with port C will need to be set for output. This is done by setting the bit 0 of DDRC ($0007) to a logic 1 ($01). </p><p>To run this example on the THRSimll software, port addresses will need to be moved to page $1000.  To do this, change the four port addresses in the program listing, e.g. $07 becomes $1007 and so on.  When you assemble the program the address modes will change from direct to extended, e.g.  STAA DDRB (97 06) becomes (B7 10 06)</p><p>Note: each register has a unique address, therefore it is not necessary to write to bit 2 of either control register.</p><p>A logic 1 on a Port B output line will cause that segment to illuminate when the LED display is enabled by a logic 0 on Port C pin, PC0. For this reason it will be necessary to determine the bit pattern, to be output on port B, that will cause the required segments to illuminate.</p><p>Suppose we wish to now program the system to display the decimal number three on the display for a period of 1 second (approx) and then turn it off again. Unlike the previous example the display will remain illuminated until it is turned off.</p><p>The bit pattern for decimal three will be segments a, b, c, d and g illuminated as shown:</p><div class="Table10" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table10" style="border-spacing: 0;empty-cells: show; margin-left:0.6cm; margin-right:0.176cm; width:24.985cm; border-collapse: collapse; "><colgroup><col style="width:5.817cm;"/><col style="width:19.168cm;"/></colgroup><tbody><tr><td style="vertical-align: top; "><p class="P4"><a name="graphics13"><!-- --></a><img alt="graphics13" class="fr2" height="190" src="module13_files/75f1c377_81x190.jpg" style="border:0px; vertical-align: top" width="81"/></p></td><td style="vertical-align: top; "><p>&#xA0;</p><p>These segments correspond to:</p><p>&#xA0;</p><p>PB0, PB1, PB2, PB3 and PB6 set to logic 1, and the other lines PB4, PB5 set to logic 0.</p><p>&#xA0;</p><p class="P6">The peripheral register B word would be:</p></td></tr></tbody></table></div><p/><div class="Table12" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table12" style="border-spacing: 0;empty-cells: show; margin-left:0.6cm; width:13.54cm; border-collapse: collapse; "><colgroup><col style="width:1.252cm;"/><col style="width:1.016cm;"/></colgroup><tbody><tr><td class="Table12_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p/></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">7</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">6</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">5</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">4</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">3</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">2</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td><td class="Table12_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table12_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center"/></td><td class="Table12_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center"/></td></tr><tr><td class="Table12_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p><b>PRB</b></p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td><td class="Table12_J2" style="vertical-align: top;  border-bottom:none;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"><a name="Object1"><!-- --></a><img alt="Object1" class="fr5" height="12" src="module13_files/16933fbd_13x12bw.png" style="border:0px; vertical-align: middle" width="13"/></p></td><td class="Table12_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center">$4F</p></td></tr><tr><td class="Table12_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p/></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">g</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">f</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">e</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">d</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">c</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">b</p></td><td class="Table12_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">a</p></td><td class="Table12_J2" style="vertical-align: top;  border-bottom:none;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table12_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center"/></td></tr></tbody></table></div><p/><p>To illuminate the display we require a logic 0 on the enable (E) line of the 7 segment display. This means a logic 0 on PC0. The peripheral register C word will therefore be:</p><div class="Table13" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table13" style="border-spacing: 0;empty-cells: show; margin-left:0.6cm; width:13.58cm; border-collapse: collapse; "><colgroup><col style="width:1.251cm;"/><col style="width:1.252cm;"/><col style="width:1.058cm;"/></colgroup><tbody><tr><td class="Table13_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center"/></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">7</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">6</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">5</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">4</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">3</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">2</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td><td class="Table13_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center"/></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center"/></td></tr><tr><td class="Table13_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p><b>PRC</b></p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table13_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">0</p></td><td class="Table13_J2" style="vertical-align: top;  border-bottom:none;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"><a name="Object7"><!-- --></a><img alt="Object7" class="fr6" height="12" src="module13_files/16933fbd_13x12bw.png" style="border:0px; vertical-align: middle" width="13"/></p></td><td class="Table13_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p class="center">$00</p></td></tr></tbody></table></div><p/><p class="P8">The flowchart is:</p><p class="indent"><a name="graphics14"><!-- --></a><img alt="graphics14" class="fr2" height="591" src="module13_files/med02f53_297x591.jpg" style="border:0px; vertical-align: top" width="297"/></p><p class="P8">The memory map is:</p><p class="indent"><span style="display: block"><a name="graphics15"><!-- --></a><img alt="graphics15" class="fr4" height="205" src="module13_files/mf7ccc17_529x205.jpg" style="border:0px; vertical-align: top" width="529"/></span></p><p>The program listing below uses the peripheral register addresses for the actual 68HC11 device, not the simulator.  To simulate the program, add $1000 to the peripheral register addresses, eg. PRB = $1004):</p><div class="Table14" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table14" style="border-spacing: 0;empty-cells: show; width:25.762cm; border-collapse: collapse; border: 1.0px solid #000000"><colgroup><col style="width:3.23cm;"/><col style="width:3.773cm;"/><col style="width:3.152cm;"/><col style="width:3.928cm;"/><col style="width:3.62cm;"/><col style="width:8.059cm;"/></colgroup><tbody><tr><td class="Table14_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p><b>Address</b></p></td><td class="Table14_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p><b>Opcode</b></p></td><td class="Table14_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p><b>Label</b></p></td><td class="Table14_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p><b>Mnemonic</b></p></td><td class="Table14_A1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:1.0px solid #000000;  padding:0.097cm; "><p><b>Operand</b></p></td><td class="Table14_F1" style="vertical-align: top;  border:1.0px solid #000000;  padding:0.097cm; "><p><b>Comment</b></p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>PRB</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>EQU</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>$04</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Peripheral register B</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>DDRB</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>EQU</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>$06</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Data direction register B</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>PRC</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>EQU</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>$03</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Peripheral register C</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>DDRC</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>EQU</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>$07</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Data direction register C</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>ORG</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>$E000</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Program start</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E000</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>86 FF</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>START</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>LDAA</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>#$FF</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>All port B line output</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E002</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>97 06</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>STAA</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>DDRB</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Set port B lines</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E004</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>86 01</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>LDAA</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>#$01</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>PCO line output</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E006</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>97 07</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>STAA</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>DDRC</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Set port C line</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E008</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>86 4F</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>LDAA</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>#$4F</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Get display word</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E00A</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>97 04</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>STAA</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>PRB</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Output display word</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E00C</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>86 00</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>LDAA</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>#$00</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Get enable word</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E00E</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>97 03</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>STAA</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>PRC</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Enable the display</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E010</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>C6 05</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>LDAB</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>#$05</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Counter for loop 2</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E012</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>CE 01 F4</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>LOOP2</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>LDX</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>#$1F4</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Counter&#xA0;for&#xA0;0.2sec&#xA0;delay</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E015</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>09</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>LOOP1</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>DEX</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Decrement counter 1</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E016</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>01</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>NOP</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>No operation, to</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E017</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>01</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>NOP</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>increase loop time</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E018</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>26 FB</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>BNE</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>LOOP1</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Refresh display</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E01A</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>5A</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>DECB</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Decrement counter 2</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E01B</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>26 F5</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>BNE</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>LOOP2</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Display (0.2 X 5 sec)</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E01D</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>86 01</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>LDAA</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>#$01</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Get disable word</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E01F</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>97 03</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p/></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>STAA</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>PRC</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p>Disable the display</p></td></tr><tr><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>E021</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>7E E0 21</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>HALT</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>JMP</p></td><td class="Table14_A2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p>HALT</p></td><td class="Table14_F2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p/></td></tr></tbody></table></div><p/><h2><a id="id17" name="id17"><!--id17--></a>13.4.5 Programming example 3</h2><p>In this example the <span class="spCh spChx2018">&#x2018;</span>HC11 receives input from a keypad. Again, it will be assumed that the <span class="spCh spChx2018">&#x2018;</span>HC11 is operating in the single-chip mode. </p><p>The keypad is comprised of 12 keys arranged in 3 columns by 4 rows. Each key forms a single-pole single-throw switch, as shown in figure 3-5. The 4 rows are connected to the <span class="spCh spChx2018">&#x2018;</span>HC11 output lines and are normally set to logic <span class="spCh spChx2018">&#x2018;</span>1<span class="spCh spChx2019">&#x2019;</span>; the three columns are connected to input lines and are also normally tied to logic <span class="spCh spChx2018">&#x2018;</span>1<span class="spCh spChx2019">&#x2019;</span> via a pull up resister.</p><p>Since the keypad is being used as an input device, a program must be written to scan the keypad to determine, which key has been pressed. Scanning the keypad may take the following form.</p><ul class="lib"><li><p>Output logic <span class="spCh spChx2018">&#x2018;</span>0<span class="spCh spChx2019">&#x2019;</span> to Row 1</p></li><li><p>Read Column 1; if <span class="spCh spChx2018">&#x2018;</span>0<span class="spCh spChx2019">&#x2019;</span> then key 1 pressed</p></li><li><p>Read Column 2; if <span class="spCh spChx2018">&#x2018;</span>0<span class="spCh spChx2019">&#x2019;</span> then key 2 pressed</p></li><li><p>Read Column 3; if <span class="spCh spChx2018">&#x2018;</span>0<span class="spCh spChx2019">&#x2019;</span> then key 3 pressed</p></li><li><p>Output logic <span class="spCh spChx2018">&#x2018;</span>0<span class="spCh spChx2019">&#x2019;</span> to Row 2</p></li><li><p>Read Column 1; if <span class="spCh spChx2018">&#x2018;</span>0<span class="spCh spChx2019">&#x2019;</span> then key 4 pressed</p></li><li><p>Read Column 2; if <span class="spCh spChx2018">&#x2018;</span>0<span class="spCh spChx2019">&#x2019;</span> then key 5 pressed</p></li><li><p>etc.<br/></p></li></ul><p>This process continues until all rows and columns have been read then the process repeats, continuously scanning for a pressed key.</p><p class="indent"><a name="graphics12"><!-- --></a><img alt="graphics12" class="fr2" height="201" src="module13_files/4b20ae0_400x201.jpg" style="border:0px; vertical-align: top" width="400"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>5</b><b>:</b> Keypad interface</p><p>The software required to scan the keypad and output the value of the key pressed to the display is beyond the scope of this course.</p><div class="Table15" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table15 learning" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table15_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics17"><!-- --></a><img alt="graphics17" class="fr2" height="57" src="module13_files/m73656803_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table15_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id18" name="id18"><!--id18--></a>Activity <span class="T2">13</span><span class="T2">.</span><span class="T2">2</span></h6><ol class="li-lower-alpha" style="list-style: lower-alpha;"><li><p>Refer to the ELE1301 course page on <span class="spCh spChx2018">&#x2018;</span>Study Desk<span class="spCh spChx2019">&#x2019;</span> and complete the following experiments:</p><ol class="li-lower-roman" style="list-style: lower-roman;"><li><p>Home experiment 13-1 - Parallel I/O program 1 <span class="spCh spChx2013">&#x2013;</span> Time delays</p></li><li><p>Home experiment 13-2 - Parallel I/O program 2 <span class="spCh spChx2013">&#x2013;</span> LED displays</p></li><li><p>Home experiment 13-2 - Parallel I/O program 3 <span class="spCh spChx2013">&#x2013;</span> Subroutines.</p></li></ol></li></ol></td></tr></tbody></table></div><p/><div class="Table8" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table8 selfassessment" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table8_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics41"><!-- --></a><img alt="graphics41" class="fr2" height="57" src="module13_files/74f1452e_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table8_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id19" name="id19"><!--id19--></a><span class="T2">Self assessment </span><span class="T2">13.2</span></h6><ol class="lin" style="list-style: decimal;"><li><p>The Motorola 68HC11 has two modes of operation, i.e. single-chip and expanded. Explain why user configured address decoding is not possible in single-chip mode, whereas it is possible in expanded mode.</p></li><li><p>Referring to figure 13-3, a microprocessor application requires 32Kbytes of ROM, which mode of operation is best suited to this application and why?</p></li><li><p>Sketch the basic block diagram of a 7 segment display interfaced to the 68HC11 in the single-chip mode.</p></li><li><p>Assuming the display configuration drawn in part (3) above and a cycle time of 40 microseconds, write a program, for the 68HC11, to activate the decimal number 5 for a period of 10sec. Start the program at $E000. Include in your answer a flow chart, memory map, assembly code, and the machine code for the program.</p></li><li><p>A basic microprocessor system uses a clock frequency of 1MHz (1 usec cycle time).  Describe, with the aid of a flow chart, how a delay of approximately one second could be achieved by decrementing a predetermined decimal number to zero.  Show all your calculations. </p></li></ol></td></tr></tbody></table></div><p/><h1><a id="id20" name="id20"><!--id20--></a>13.5 Digital and analog signals</h1><p>Most microprocessor based systems are used to control external devices or processes. They transmit data to or receive data from these devices. Many of these devices involve either mechanical or electrical transducers but they all may either require an analog voltage to operate, such as a motor, or generate a voltage depending upon some form of motion such as a position sensor.</p><p>In these cases the signals to/from the peripheral devices must be converted to either a digital or analog form.</p><p>So far we have concentrated on digital data where the data is defined by specific values, e.g. a logic 0 may be represented by 0 volts and a logic 1 by 5 volts.  Analog data, on the other hand, is continuous in nature and may be any value at any time, e.g. temperature varies continuously with time, so all values of temperature within a particular time period are valid analog values.</p><p>A selection of integrated circuit devices is available for designers to incorporate in their systems. These devices are known as Analog-to-Digital (A/D) converters or Digital-to-Analog (D/A) converters. They vary according to their design, which typically includes parameters such as operating speed, number of bits used and resolution.</p><h2><a id="id21" name="id21"><!--id21--></a>13.5.1 Digital to analog conversion</h2><p class="P17">The basic digital to analog converter uses principles associated with an electronic operational amplifier as shown below.</p><p class="P17"><a name="graphics18"><!-- --></a><img alt="graphics18" class="fr2" height="149" src="module13_files/m770fb4a5_330x149.jpg" style="border:0px; vertical-align: top" width="330"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>6</b><b>:</b> Inverting amplifier</p><p>Using Kirchoffs laws and summing the currents at the amplifier (A) input, we can derive an expression for the output voltage Vo in terms of the input voltage Vi; the feedback resistance Rf and the input resistance Ri.</p><p>Now i<sub>1</sub> = i<sub>2</sub></p><p><a name="Object2"><!-- --></a><img alt="Object2" class="fr7" height="117" src="module13_files/m26f9125f_295x117bw.png" style="border:0px; vertical-align: top" width="295"/></p><p>Consider an amplifier with Rf = 100k<span class="T3"><span class="spCh spChx3a9">&#x3A9;</span></span>, Ri = 10k<span class="T3"><span class="spCh spChx3a9">&#x3A9;</span></span> and an input voltage of 1 Volt. We have:</p><p class="indent"><a name="Object3"><!-- --></a><img alt="Object3" class="fr8" height="39" src="module13_files/m4ca107fd_135x39bw.png" style="border:0px; vertical-align: top" width="135"/></p><p>This principle can be extended to a summing amplifier circuit connected to electronic switches shown as flip flops, FF1 to FF4 in the following diagram.</p><p><a name="graphics38"><!-- --></a><img alt="graphics38" class="fr2" height="248" src="module13_files/m25130aba_412x248.jpg" style="border:0px; vertical-align: top" width="412"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>7</b><b>:</b> Basic digital to analog converter (summing amplifier)</p><p>In the circuit shown initially all flip flops are reset and Vo = 0Volts.</p><p>If now FF1 is set, its 5Volt output is applied to the amplifier and Vo = <a name="Object4"><!-- --></a><img alt="Object4" class="fr9" height="39" src="module13_files/m3a09d24d_45x39bw.png" style="border:0px; vertical-align: middle" width="45"/> = 0.5 Volts</p><p>If now FF1 is reset and FF4 is activated then Vo = <a name="Object5"><!-- --></a><img alt="Object5" class="fr10" height="39" src="module13_files/440ce878_56x39bw.png" style="border:0px; vertical-align: middle" width="56"/> = 4 Volts</p><p>It can be seen that FF1 input is the least significant bit and FF4 is the most significant bit. The binary word 1101 applied to FF<span class="spCh spChx2019">&#x2019;</span>s 1 to 4 gives</p><p class="indent">Vo = 4 + 2 + 0 + 0.5 = 6.5 volts.</p><p>Thus a digital word (1101) produces an analog voltage (5.5). This type of D/A converter is known as the weighted resistor network system. Other types of D/A converters are available such as resistor ladder network systems and multiplying D/A converters.</p><p>The multiplying D/A converter has a variable reference voltage applied to it and it produces an output that is the product of the digital input value times the reference voltage. The details of these converters are beyond the scope of this course.</p><p>Microprocessors are often interfaced to D/A converters and special integrated circuits with addressable input buffers have been developed.</p><p class="P14">Consider the system shown:</p><p><a name="graphics9"><!-- --></a><img alt="graphics9" class="fr2" height="194" src="module13_files/m416e0c97_470x194.jpg" style="border:0px; vertical-align: top" width="470"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>8</b><b>:</b> D/A converter</p><p>A D/A converter requires a binary word at its input to remain present and stable as long as the analog output voltage is required. This process would require the data bus to be held constant for long periods which would prevent the CPU from executing other tasks. For this reason the D/A unit normally has a temporary store register (latch) to accept the data bus word and maintain it until cleared by some other means. This immediately releases the data bus for other tasks.</p><p>From the foregoing it is clear the resolution of output voltages from a D/A converter depends upon the number of binary bits used to drive it. Many systems only require 8 bits however 10, 12, 16 or 32 bits could be used. In these cases as the D/A requires more bits than the data bus can provide in one byte, special techniques can be used to achieve the correct input word for conversion.</p><p>One technique uses two latches, which are sequentially filled before conversion is allowed to commence.</p><p>Consider for instance a 10 bit D/A converter to be interfaced to an 8 bit CPU data bus.</p><p class="indent"><a name="graphics16"><!-- --></a><img alt="graphics16" class="fr2" height="194" src="module13_files/m30ac2d0d_522x194.jpg" style="border:0px; vertical-align: top" width="522"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>9</b><b>:</b> 10 Bit D/A converter</p><p class="P8">In this system, the CPU sends the first 8 bits of the 10 bit word from a memory location on to the data bus. It goes to all three latches simultaneously. An address word is then used which when decoded by the 2 to 4 decoder, enables via the E line, the low byte latch.</p><p>The CPU then sends the next 2 bits of the 10 bit word to the high byte latch enabling it as before with another address. This now means that a 10 bit binary word is sitting at the D/A input ready to be converted. The CPU now addresses the third latch which provides a load D/ A converter (LDA) signal and all 10 bits are converted to an analog voltage output simultaneously.</p><h2><a id="id22" name="id22"><!--id22--></a>13.5.2 Analog to digital conversion</h2><p>An analog to digital converter (A/D) accepts an analog signal such as a voltage and when commanded, converts it into a single binary word.</p><p>Typically there are three types of analog to digital converters. These are:</p><ul class="lib"><li><p>successive approximation</p></li><li><p>integration</p></li><li><p>direct comparison.<br/></p></li></ul><h2><a id="id24" name="id24"><!--id24--></a>13.5.3 Successive approximation conversion</h2><p>This type of conversion uses a D/A converter to compare its output voltage with the unknown voltage to be converted to a binary word. The hardware for such a system is shown in the diagram.</p><p class="indent"><a name="graphics19"><!-- --></a><img alt="graphics19" class="fr2" height="158" src="module13_files/91f69ba_328x158.jpg" style="border:0px; vertical-align: top" width="328"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>10</b><b>:</b> Successive approximation converter</p><p>In other words we <span class="spCh spChx2018">&#x2018;</span>guess<span class="spCh spChx2019">&#x2019;</span> a binary word and compare the D/A output with the unknown voltage input. We then proceed to refine our guess as many times as is necessary until the two analog voltages are as equal as possible depending upon the number of binary bits available.</p><p>Consider the operation of the system. Suppose the comparator output is a logic 0 if the unknown voltage is greater than the D/A voltage and logic 1 if it is less than the D/A voltage.</p><p>The <span class="spCh spChx2018">&#x2018;</span>guessing<span class="spCh spChx2019">&#x2019;</span> algorithm is to start with the most significant bit of the D/A on (i.e. word 1000) and examine the comparator output. If it is a logic 1, we are greater than the unknown so we turn the MSB off and turn the next bit on and try again. If on the other hand we are less than the unknown we leave that bit on and than activate the next bit on and compare etc. This process is continued until all bits have been tested. The binary word at the D/A input is the required word for that analog signal.</p><p>Consider an example. Suppose our D/A has outputs associated with the binary word as shown:</p><div class="Table16" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table16" style="border-spacing: 0;empty-cells: show; margin-left:0.6cm; margin-right:2.757cm; width:22.405cm; border-collapse: collapse; border: 1.0px solid #000000"><colgroup><col style="width:6.502cm;"/><col style="width:3.955cm;"/><col style="width:3.999cm;"/><col style="width:3.997cm;"/></colgroup><tbody><tr><td class="Table16_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p/></td><td class="Table16_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">MSB</p></td><td class="Table16_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table16_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center"/></td><td class="Table16_B1" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:none;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">LSB</p></td></tr><tr><td class="Table16_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p>Binary Word</p></td><td class="Table16_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td><td class="Table16_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td><td class="Table16_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td><td class="Table16_E2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p class="center">1</p></td></tr><tr><td class="Table16_A1" style="vertical-align: top;  border:none;  padding:0.097cm; "><p>Analog Voltages</p></td><td class="Table16_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">.5V</p></td><td class="Table16_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">.25V</p></td><td class="Table16_B2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:none;  border-top:none;  padding:0.097cm; "><p class="center">.125V</p></td><td class="Table16_E2" style="vertical-align: top;  border-bottom:1.0px solid #000000;  border-left:1.0px solid #000000;  border-right:1.0px solid #000000;  border-top:none;  padding:0.097cm; "><p class="center">.0625V</p></td></tr></tbody></table></div><p/><p>Suppose we have an unknown voltage as shown on the graph:</p><p class="indent"><a name="graphics23"><!-- --></a><img alt="graphics23" class="fr2" height="245" src="module13_files/m79e9cbff_363x245.jpg" style="border:0px; vertical-align: top" width="363"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>11</b><b>:</b> Voltage guesses</p><p>We start by turning on the MSB, it provides an output of 0.5 V which is below our unknown so the comparator output is a logic 1. We leave that bit on and activate the next most significant bit. This bit contributes to 0.25 V therefore our D/A output is now 0.5 + 0.25 = 0.75 V. This causes the comparator output to be a logic 0 indicating our guess is above the unknown. We turn the second bit off and turn on the third bit. This gives 0.5 + 0.125 = 0.625 V. This is below the unknown so we leave it on.</p><p>The last bit (LSB) is then turned on giving 0.5 + 0.125 + 0.0625 = 0.6875 V. This is as close as we can come to the unknown as we have used all of the 4 bits. Thus the required binary word corresponding to the unknown analog voltage is 1011. Obviously greater accuracy in conversion would arise from using 8 or 10 binary digits in the system.</p><p>Most members of the MC68HC11 family of micro-controllers contain this type of A/D converter. However, that member depicted in figure 13-5 has no A/D converter.</p><h2><a id="id25" name="id25"><!--id25--></a>13.5.4 Integration conversion</h2><p class="P17">In this category of A/D converters, two types are found in practice. These are the integrating A/D converter and the single/dual slope A/D converters.</p><h2><a id="id26" name="id26"><!--id26--></a>13.5.5 Integrating A/D converters</h2><p>This type of converter is slow in comparison to some other types. The principle is shown in the diagram.</p><p class="indent"><a name="graphics20"><!-- --></a><img alt="graphics20" class="fr2" height="156" src="module13_files/m15c310eb_470x156.jpg" style="border:0px; vertical-align: top" width="470"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>12</b><b>:</b> Integrated A/D converter</p><p>The voltage controlled oscillator (VCO) generates an output pulse train whose frequency is proportional to the unknown analog voltage input. Small input voltages produce a low frequency output and large input voltages produce higher frequency outputs from the VCO. These signals are gated to a counter enabled by a fixed duration timing or gate pulse.</p><p>The counter having been previously reset to zero will begin counting until the gate pulse inhibits it. The count is then transferred to the latch register and the digital output is maintained allowing the counter to be reset for the next conversion.</p><p>Waveforms associated with this system are shown below.</p><p class="indent"><a name="graphics25"><!-- --></a><img alt="graphics25" class="fr2" height="174" src="module13_files/m6eee54ab_396x174.jpg" style="border:0px; vertical-align: top" width="396"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>13</b><b>:</b> Timing waveforms</p><h2><a id="id27" name="id27"><!--id27--></a>13.5.6 Single Slope A/D converter</h2><p>This A/D converter utilises a saw-tooth waveform generator (integrator) and a digital counter with precise timing.  In operation, the analog input voltage is compared to the ramping voltage of the integrator.  When the analog input voltage is greater than the integrator output, the output of the comparator is a logic 0, allowing the integrator output to continue rising at a linear rate.  During this time the counter is counting up at a frequency fixed by a precision clock.  The higher the analog input voltage, the longer it takes the integrator to reach an equivalent voltage, hence a higher count.  When the integrator reaches the same level as the analog input voltage the comparator output toggles to a logic 1.  This causes the contents of the counter to be loaded into the shift register.  It also causes the integrator to reset to 0 volts and subsequently the comparator output toggles to a logic 0 - clearing the counter and allowing the integrator to ramp up again as illustrated in the following diagram.</p><p/><p class="figure-caption-below"><span style="display: block"><a name="graphics1"><!-- --></a><img alt="graphics1" class="fr4" height="296" src="module13_files/m7870b869.jpg" style="border:0px; vertical-align: top" width="351"/></span><b><!--empty--></b></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>14</b><b>:</b> Single slope A/D converter</p><p>The accuracy of the single slope A/D converter depends on to independent circuits, ie. The integrator and the counter.  Any variation between the two, which is inevitable over time, will cause inaccurate conversions.  This is referred to as calibration drift.  To overcome this deficiency the dual slope A/D converter can be utilised. </p><h2><a id="id28" name="id28"><!--id28--></a>13.5.7 Dual slope A/D converter</h2><p>In this system, a time comparison between a known reference voltage (-V<sub>REF</sub>) and the unknown input voltage (Vu) is made. The block diagram of this dual-slope converter is shown.</p><p class="indent"><a name="graphics21"><!-- --></a><img alt="graphics21" class="fr2" height="202" src="module13_files/5e5d4069_445x202.jpg" style="border:0px; vertical-align: top" width="445"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>15</b><b>:</b> Dual slope A/D converter</p><p>In operation, the counter is initially reset to zero and S1 is connected to the unknown input voltage (Vu). The comparator output is Vc, a logic zero, thus inhibiting the AND gate.</p><p>Immediately Vu is applied to the integrator its output Vo begins to rise linearly and this causes the comparator output Vc to change to a logic one. The clock pulses (at a known frequency) are then transferred to the counter, which immediately begins counting. When the counter reaches its maximum state (i.e. 1111) it will reset itself to zero and provide an overflow signal, which changes S1 to the reference voltage (-Vref). This causes the integrator to ramp in the opposite direction until it reaches zero. When the comparator detects this its output returns to a logic 0 and the counter stops.</p><p>The waveforms associated with the system are shown below:</p><p class="indent"><a name="graphics27"><!-- --></a><img alt="graphics27" class="fr2" height="235" src="module13_files/m5c1acec0_279x235.jpg" style="border:0px; vertical-align: top" width="279"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>16</b><b>:</b> Converter waveforms</p><p class="P8">The counter output provides the required output digital word and is proportional to the unknown input voltage given by the ratio:</p><p class="indent"><a name="Object6"><!-- --></a><img alt="Object6" class="fr11" height="39" src="module13_files/2d7d2ce3_89x39bw.png" style="border:0px; vertical-align: middle" width="89"/></p><h2><a id="id29" name="id29"><!--id29--></a>13.5.8 Direct comparison conversion</h2><p>This system is used where extreme speed is required to perform a conversion. The circuit uses several comparators each with their own reference voltage (VREF) within a given range of operation. Each comparator provides a logic output depending upon the input level compared with the reference.</p><p class="indent"><a name="graphics22"><!-- --></a><img alt="graphics22" class="fr2" height="394" src="module13_files/m77c19ec4_452x394.jpg" style="border:0px; vertical-align: top" width="452"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>17</b><b>:</b> Direct comparison converter</p><p>An 8 to 3 encoder is used in this case to convert the comparators logic outputs to a 3 bit binary number. A 4 bit binary output would require 16 comparators etc. The need for many comparators, reference voltages and a complex encoder scheme make this method expensive to produce. It can however convert analog signals to digital word in nanoseconds. This system is sometimes known as a parallel or flash converter.</p><p/><div class="Table26" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table26 selfassessment" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table26_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics8"><!-- --></a><img alt="graphics8" class="fr2" height="57" src="module13_files/74f1452e_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table26_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id30" name="id30"><!--id30--></a><span class="T2">Self assessment </span><span class="T2">13.3</span></h6><ol class="lin" style="list-style: decimal;"><li><p>Explain with the aid of diagrams, the operation of a successive-approximation type of analogue-to-digital converter.</p></li><li><p>Explain, with the aid of a block diagram, how a 10 bit D/A converter could be interfaced to an 8 bit data bus of a microprocessor.</p></li><li><p>Explain with the aid of diagrams, the operation of a dual-slope type of A/D converter.</p></li></ol></td></tr></tbody></table></div><p class="P16"/><h1><a id="id31" name="id31"><!--id31--></a>13.6 Direct memory access</h1><p>Some microprocessors have specific input/output instructions, e.g. IN transfers data from the addressed device to the accumulator and vice-versa for OUT. The Motorola microprocessors have no input/output instructions at all. They treat peripheral devices as memory locations so any instruction transferring data to and from memory can achieve input/output. We have seen the use of these instructions (e.g. LOAD and STORE) in addressing ports. This type of transfer is called <span class="spCh spChx2018">&#x2018;</span>memory-mapped input/output<span class="spCh spChx2019">&#x2019;</span>. It is ideal for slow speed devices and for those that only require single data transfers.</p><p>Many peripheral devices require transfer of <span class="spCh spChx2018">&#x2018;</span>blocks of data<span class="spCh spChx2019">&#x2019;</span> to or from memory at high speed. Such devices include magnetic disks or tapes. If the peripheral could access the memory directly and not via the CPU then obviously the data transfer speed could be increased to the hardware speed alone. This procedure is known as Direct Memory Access (DMA). DMA is an operation in which the CPU hands over control of the buses to a special control unit known as the DMA controller.</p><p>The controller must specify the following information for a block transfer:</p><ul class="lib"><li><p>The device address</p></li><li><p>The starting address of the block in memory</p></li><li><p>The number of data words to be transferred</p></li><li><p>The direction of transfer (e.g. IN or OUT).<br/></p></li></ul><p>DMA controllers are complex and essentially another processor. In some cases the original CPU can even act as this processor. Most systems however use separate hardware and all must:</p><ul class="lib"><li><p>Advise the CPU of the DMA request</p></li><li><p>Control the buses so as not to interfere with the CPU. This is known as bus contention</p></li><li><p>Complete the transfer</p></li><li><p>Advise the CPU of the end of the transfer.<br/></p></li></ul><p>When a DMA request is received by the processor it usually halts its current operation and indicates to the DMA controller it is not using the buses and waits until control is returned to it.</p><p>One simple DMA technique is to use CPU cycles when the CPU is not accessing the memory. The DMA controller can then use the buses without informing the CPU. This is called <span class="spCh spChx2018">&#x2018;</span>cycle stealing<span class="spCh spChx2019">&#x2019;</span>. A major problem of bus contention can occur under this technique. Motorola MC6800 series of microprocessors get over this problem by generating a special signal whenever the CPU is using the memory. This signal is known as Valid Memory Address (VMA).</p><p class="P15"/><div class="Table25" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table25 selfassessment" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table25_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics39"><!-- --></a><img alt="graphics39" class="fr2" height="57" src="module13_files/74f1452e_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table25_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id32" name="id32"><!--id32--></a><span class="T2">Self assessment </span><span class="T2">13.4</span></h6><ol class="lin" style="list-style: decimal;"><li><p>State the purpose of DMA. Include in your answer the information that the DMA controller must supply to the CPU.</p></li><li><p>Explain what is meant by bus contention and how it is avoided.</p></li><li><p>State the purpose of Motorola<span class="spCh spChx2019">&#x2019;</span>s VMA signal.</p></li><li><p>Explain the DMA term <span class="spCh spChx2018">&#x2018;</span>cycle stealing<span class="spCh spChx2019">&#x2019;</span>. Include in your answer a major problem associated with cycle stealing and how Motorola overcome this problem.</p></li></ol></td></tr></tbody></table></div><p/><h1><a id="id33" name="id33"><!--id33--></a>13.7 Interrupts</h1><p>A major difference exists between most peripherals when they are connected to a CPU and that is <span class="spCh spChx2018">&#x2018;</span>speed of operation<span class="spCh spChx2019">&#x2019;</span>. In general most peripherals are very slow compared with a CPU. Signals between the CPU and the peripheral indicating when each other is ready to transfer data, are known as <span class="spCh spChx2018">&#x2018;</span>Interrupts<span class="spCh spChx2019">&#x2019;</span>.</p><p>An interrupt can also be a signal to a CPU to halt its normal operations and do something more important. These signals are used for alarm inputs, external control of processes or debugging aids in software development. Generally interrupts fall into three categories:</p><ul class="lib"><li><p>internal</p></li><li><p>external</p></li><li><p>software<br/></p></li></ul><p>Internal interrupts, sometimes called error <span class="spCh spChx2018">&#x2018;</span>traps<span class="spCh spChx2019">&#x2019;</span> are initiated by the illegal use of an instruction or code, register overflows or incorrect memory operations.</p><p>External interrupts are generated by signals from peripheral devices. They may be requesting data transfers or indicating a failure has occurred. A good example of this is a power failure.</p><p>In this case the interrupt may be used to initiate a special routine to quickly store some vital data in a non-volatile memory in the few milliseconds before the power supply drops to zero.</p><p>A software interrupt is initiated by a special mnemonic included in the instruction set, e.g. SWI for the Motorola processor. This is also used in some situations to halt the processor at the end of a program.</p><p class="P8">When an interrupt is received by the CPU it:</p><ul class="lib"><li><p>Completes the current instruction in its program</p></li><li><p>Stores all of its registers contents in memory</p></li><li><p>Executes a special program called the Interrupt Service Routine (ISR)</p></li><li><p>Returns to the point where it left the original program.<br/></p></li></ul><p>Various methods are used to transfer control to the ISR, these include:</p><ol class="li-lower-roman" style="list-style: lower-roman;"><li><p>Jump to a specified memory location and get the address of the start of the ISR previously put there by the programmer (this may or may not be a permanently reserved location)</p></li><li><p>Obtain a new value for the PC (which is the start of the ISR) from a specific register within the CPU</p></li><li><p>Execute a JSR instruction to an address supplied by some external hardware on the data bus. This externally supplied address is called the <b>vector address or interrupt vector</b></p></li><li><p>On receipt of <b>interrupt request</b> the CPU supplies an <b>interrupt acknowledge</b> signal which gates back from the external hardware a <b>specific instruction</b>.<br/></p></li></ol><p>Methods i. or ii. are relatively simple to operate and require no external hardware. Methods iii. or iv. require external hardware which needs to be synchronised. However, where multiple interrupts are concerned these last methods can supply vector addresses peculiar to their own ISR<span class="spCh spChx2019">&#x2019;</span>s. Multiple interrupts will be explained later.</p><h2><a id="id34" name="id34"><!--id34--></a>13.7.1 Returning to the main program</h2><p>This relies on how the original PC value was stored on the jump to ISR sequence.</p><p>One method is the <b>jump and mark</b> technique. The <b>start address</b> of the ISR is held in a particular memory location while the <b>return address</b> to the main program is stored in the first address of the ISR. Using <b>indirect addressing</b> a jump will cause a return to the main program at the end of the ISR.</p><p>This method does not allow <span class="spCh spChx2018">&#x2018;</span>nested interrupts<span class="spCh spChx2019">&#x2019;</span> nor can it be used on the <span class="spCh spChx2018">&#x2018;</span>HC11 because <b>indirect addresses are not available</b>.</p><p>An alternative method as used by Motorola is to use the stack.</p><p>On interrupt, the PC all internal registers are put on the stack and operation is identical to JSR and RTS operations previously described.</p><p>A processor, with only one interrupt request input pin, may have more than one source of interrupt and may have to respond differently to each. For this reason recognition by the processor of the interrupt source needs to be considered.</p><p class="P8">Three common methods are used to examine interrupts. These are:</p><ol class="li-lower-alpha" style="list-style: lower-alpha;"><li><p><b>polling</b></p></li><li><p><b>daisy chaining</b></p></li><li><p><b>vectoring<br/></b></p></li></ol><p/><div class="Table20" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table20" style="border-spacing: 0;empty-cells: show; keep-with-next:always; width:3.528cm; border-collapse: collapse; "><colgroup><col style="width:0.573cm;"/><col style="width:2.955cm;"/></colgroup><tbody><tr><td class="Table20_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p class="P18">a.</p></td><td class="Table20_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p class="P18"><b>Polling</b></p></td></tr></tbody></table></div><p class="P8"/><p>Polling means the CPU checks each interrupt line until it finds an active one. Usually the CPU has only one <b>interrupt request</b> line with several devices connected, via OR-gates, to it as shown in the diagram.</p><p class="indent"><a name="graphics24"><!-- --></a><img alt="graphics24" class="fr2" height="130" src="module13_files/m5aff94e9_305x130.jpg" style="border:0px; vertical-align: top" width="305"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>18</b><b>:</b> Multiple interrupt system</p><p>Also each peripheral has a <span class="spCh spChx2018">&#x2018;</span>control and status register<span class="spCh spChx2019">&#x2019;</span> (CSR) which has an INT bit set when an interrupt request is made.</p><p>A software routine is then used to check each peripheral CSR INT BIT in turn (i.e. polling) to identify the interrupting peripheral. This is shown in the following software flowchart.</p><p class="indent" style="keep-with-next:always; "><a name="graphics32"><!-- --></a><img alt="graphics32" class="fr2" height="335" src="module13_files/m31e17635_299x335.jpg" style="border:0px; vertical-align: top" width="299"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>19</b><b>:</b> Polling software routine</p><p>An alternative to a separate control and status register in each peripheral is to have a special register called an <span class="spCh spChx2018">&#x2018;</span>input port<span class="spCh spChx2019">&#x2019;</span>.</p><p>Each peripheral can then set a bit in this register.</p><p>A similar polling technique can check each bit in this register and go to the appropriate ISR.</p><p>Polling requires very little hardware to achieve but can only be used for a limited number of peripherals because of the serial nature of checking each one.</p><div class="Table21" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table21" style="border-spacing: 0;empty-cells: show; margin-left:0cm; margin-right:10.015cm; width:15.746cm; border-collapse: collapse; "><colgroup><col style="width:2.12cm;"/><col style="width:13.626cm;"/></colgroup><tbody><tr><td class="Table21_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>b.</p></td><td class="Table21_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p><b>Daisy chaining</b></p></td></tr></tbody></table></div><p/><p>An improvement on the polling routine for interrupts is called the <span class="spCh spChx2018">&#x2018;</span>daisy chain<span class="spCh spChx2019">&#x2019;</span> method. It is significantly faster than conventional polling techniques:</p><p><a name="graphics26"><!-- --></a><img alt="graphics26" class="fr2" height="204" src="module13_files/7fc3d7e4_432x204.jpg" style="border:0px; vertical-align: top" width="432"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>20</b><b>:</b> Daisy chain interrupt system</p><p>Let us consider the operation of this system. On receipt of an interrupt signal (INT) after storing its registers, the microprocessor generates an interrupt acknowledge signal (ACK). This is gated to device 1. If device 1 caused the interrupt it will place its identification code on the data bus where it will be read by the microprocessor.</p><p>If it did not generate the interrupt, it propagates the ACK to the next device, which follows the same procedure.</p><div class="Table22" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table22" style="border-spacing: 0;empty-cells: show; margin-left:0cm; margin-right:10.301cm; width:15.46cm; border-collapse: collapse; "><colgroup><col style="width:2.219cm;"/><col style="width:13.242cm;"/></colgroup><tbody><tr><td class="Table22_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p>c.</p></td><td class="Table22_A1" style="vertical-align: top;  border:none;  padding-bottom:0.101cm;  padding-left:1.0px;  padding-right:1.0px;  padding-top:0.101cm; "><p><b>Vectoring</b></p></td></tr></tbody></table></div><p/><p>This is the fastest and most sophisticated method of handling interrupts. It means each interrupt source must provide data (i.e. vector), which the CPU can use for identification of the source or better yet, the branching address for the interrupt handling routine.</p><p>If the input/output device controller just provides the identity code of a device, it is a fairly simple task in software to look-up a table containing a branching address for each device.</p><p>This is simple from a hardware point of view but doesn<span class="spCh spChx2019">&#x2019;</span>t achieve the highest possible performance efficiency.</p><p>The highest possible performance occurs when not only does the CPU receive an interrupt, it also receives the <b>direct 16 bit branching address</b> to the appropriate ISR.</p><p>It can then directly branch to the required location in memory and start servicing the device.</p><h2><a id="id35" name="id35"><!--id35--></a>13.7.2 Priorities </h2><p>When handling multiple interrupts a problem can arise in that several interrupts may be triggered simultaneously. Under these conditions, the CPU must then decide in which order they should be serviced.</p><p>If a priority is normally attached to each device, the CPU can then service each device in order of that priority. It is normal to assign level 0 as the highest priority, level 1 the next, and so on. </p><p>Typically,</p><p>level 0 could be used for a power-fail restart <br/>levels 1 and 2 for display devices<br/>levels 3 and 4 for disks<br/>level 5 for printers<br/>level 6 for teletypes <br/>level 7 for external switches, etc.</p><p>Priorities may be enforced in hardware or in software.</p><p>Software priorities are enforced by using a look-up table of device code versus priority level and servicing the highest priority first.</p><p>Hardware priority may be achieved using a system as shown in the diagram. The system uses a special external register called an enabling register. This register is fed from the data bus and its outputs are used to enable or inhibit a set of AND gates.</p><p class="indent"><a name="graphics28"><!-- --></a><img alt="graphics28" class="fr2" height="219" src="module13_files/m49da6e45_404x219.jpg" style="border:0px; vertical-align: top" width="404"/></p><p class="figure-caption-below"><b>Figure </b><b>13</b><b>.</b><b>21</b><b>:</b> Priority interrupt system</p><p>The CPU will only respond to those interrupts whose enabling signals are set by a <span class="spCh spChx2018">&#x2018;</span>1<span class="spCh spChx2019">&#x2019;</span> in the register.</p><h1><a id="id36" name="id36"><!--id36--></a>13.8 Device initiated input/output by interrupts</h1><p class="P17">This type of input/output makes efficient use of computer time because the CPU doesn<span class="spCh spChx2019">&#x2019;</span>t have to repeatedly check if the peripheral is ready for a transfer.</p><p>Instead, CPU can do other tasks and when the device is ready, it sends a signal to the CPU interrupt input.</p><p>This causes CPU to suspend its current execution and perform a special Interrupt Service Routine (typically this would be a program to transfer data) and when finished, it returns to the main program. Consider a memory map:</p><p class="P8">e.g.</p><p class="indent"><a name="graphics35"><!-- --></a><img alt="graphics35" class="fr2" height="274" src="module13_files/7f025190_510x274.jpg" style="border:0px; vertical-align: top" width="510"/></p><h2><a id="id37" name="id37"><!--id37--></a>13.8.1 Return address</h2><p>After executing the ISR, how does MPU know where to return to?</p><p>As outlined previously, this is taken care of automatically by the CPU as it temporarily stores the current address of the PC on the stack <b>before</b> it branches to the ISR.</p><p>Actually it stores PC, Index Reg, AccA, AccB and CCR in that order, on the stack.</p><p>When the RTI is executed it restores these values to their respective sources in the reverse order as the stack is a Last In First Off (LIFO) device.</p><h2><a id="id38" name="id38"><!--id38--></a>13.8.2 Disabling the interrupt</h2><p class="P17">What happens when an input/output device interrupts the MPU while it is executing a program, which requires continuous processing?</p><p>This might happen if the CPU was in the middle of a timing loop for a delay for instance, or if the CPU was communicating with another device.</p><p>In these situations, an interrupt could have undesirable results. All CPU<span class="spCh spChx2019">&#x2019;</span>s have therefore provision for disabling the interrupt input. This is done by setting the interrupt mask bits (X and I) in the CCR and by local enable mask bits in the on-chip peripheral control registers.</p><p class="P8">Instructions are provided so that the programmer can set or reset these bits. These are Set Interrupt Mask (SEI) and Clear Interrupt Mask (CLI). These are put around a program to protect it. e.g.</p><p class="indent" style="keep-with-next:always; ">(SEI<br/>(Delay<br/>(Routine<br/>(CLI</p><h2><a id="id39" name="id39"><!--id39--></a>13.8.3 Types of interrupt inputs</h2><p>The 68HC11 has 2 types of interrupt inputs <span class="spCh spChx2013">&#x2013;</span> <i>maskable</i> and <i>non-maskable</i>.</p><p>A maskable interrupt has just been described and is ignored if the interrupt mask flag (I), has been set. A <b>non-maskable</b> interrupt will interrupt the CPU regardless of the status of the I flag. It cannot be disabled by the programmer as it often involves a safety feature.</p><p>The parameters of these interrupt inputs are:</p><ul class="lib"><li><p>The CPU can ignore IRQ if the I flag has been previously set. It cannot ever ignore a NMI (XIRQ input).</p></li><li><p>NMI has priority over IRQ if signals were received simultaneously at these inputs.<br/></p></li></ul><p>A major use of NMI could be in a power failure shut-down routine. Here an external circuit detects a power drop (or loss) and signals the 68HC11, via the XIRQ line, to branch to an ISR to store register contents in a battery backed RAM.</p><p>IRQ is often used in handshaking between the CPU and a peripheral.</p><h2><a id="id40" name="id40"><!--id40--></a>13.8.4 Address of the ISR</h2><p class="P17">When an interrupt occurs how does the MPU know what address to branch to for the ISR?</p><p class="P17">The answer varies from CPU to CPU and is given by each manufacturer.</p><p>On interrupt, Motorola systems obtain a 16 bit interrupt vector from 2 fixed memory locations. This interrupt vector is then loaded into the PC as the address of where the first instruction of the ISR resides.</p><p class="P15"/><div class="Table18" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table18 learning" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table18_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics36"><!-- --></a><img alt="graphics36" class="fr2" height="57" src="module13_files/m73656803_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table18_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id41" name="id41"><!--id41--></a>Activity <span class="T2">13</span><span class="T2">.</span><span class="T2">3</span></h6><ol class="li-lower-alpha" style="list-style: lower-alpha;"><li><p>Refer to the ELE1301 course page on <span class="spCh spChx2018">&#x2018;</span>Study Desk<span class="spCh spChx2019">&#x2019;</span> and complete the following experiment:</p></li></ol><p class="indent">Home experiment 13-4 <span class="spCh spChx2013">&#x2013;</span> Parallel I/O program 4 <span class="spCh spChx2013">&#x2013;</span> Interrupts</p></td></tr></tbody></table></div><p/><div class="Table17" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table17 selfassessment" style="border-spacing: 0;empty-cells: show; width:14.601cm; border-collapse: collapse; "><colgroup><col style="width:2.002cm;"/><col style="width:12.599cm;"/></colgroup><tbody><tr><td class="Table17_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><p><a name="graphics29"><!-- --></a><img alt="graphics29" class="fr2" height="57" src="module13_files/74f1452e_57x57.jpg" style="border:0px; vertical-align: top" width="57"/></p></td><td class="Table17_A1" style="vertical-align: top;  border:none;  padding:1.0px; "><h6><a id="id42" name="id42"><!--id42--></a><span class="T2">Self assessment </span><span class="T2">13.5</span></h6><ol class="lin" style="list-style: decimal;"><li><p>Explain the reason for requiring <span class="spCh spChx2018">&#x2018;</span>interrupts<span class="spCh spChx2019">&#x2019;</span> in a microprocessor system, giving a clear example of the actions taken by a CPU when it detects an interrupt.</p></li></ol><ol class="li-lower-alpha" style="list-style: lower-alpha;"><li><p>Explain one (1) method a microprocessor may use following an interrupt to determine the appropriate interrupt service routine.</p></li></ol></td></tr></tbody></table></div><p/><h1><a id="id43" name="id43"><!--id43--></a>13.9 FPGAs (not examinable)</h1><p>What is an FPGA? An FPGA (field programmable gate array) is a programmable logic device.  In other words, it is a digital logic device that can be programmed to implement an entire digital system, including the processor, peripheral components and the interface logic.  The use of FPGAs has greatly increased in recent years, particularly in automotive, telecommunications, military and commercial products where reductions in size and cost are of paramount importance.  FPGAs are introduced here to simply to raise your awareness of state-of-the-art techniques used in computer engineering and embedded systems design.</p><p>FPGAs can be programmed to perform relatively simple logic functions or very complex high speed logic functions.  An FPGA is an integrated circuit containing many (1500 to 75,000) identical logic cells. Each logic cell may combine a few binary inputs (typically 3 to 10) to one or two outputs according to the boolean function specified in the user's program.  The individual cells are interconnected by a matrix of wires and programmable switches.  A user's design is implemented by specifying the simple logic function for each cell and selectively closing the switches in the wire matrix.</p><p>The beauty of FPGAs is that you do not require thousands of discrete integrated circuits, microprocessors and I/O devices to perform complex logic functions.  An FPGA can be programmed to perform the required function by describing the function on a PC, using a schematic and/or specialised software such as VHDL, which stands for  VHSIC (Very High Speed Integrated Circuit) Hardware Description Language.  Once you have described your logic function on a PC you can compile and download it to the FPGA.  The FPGA will then perform the function as you described it.</p><p>You can search the web for more information on this topic. A good place to start is <a href="http://www.fpga4fun.com/FPGAinfo2.html">fpga4fun.com</a></p><div class="Table19" style="width: 100%; margin: 0px; padding: 0px; text-align:left;"><table class="Table19" style="border-spacing: 0;empty-cells: show; width:100%; border-collapse: collapse; "><colgroup><col style="width:25.762cm;"/></colgroup><tbody><tr><td style="vertical-align: top; "><p class="P5"/></td></tr></tbody></table></div><p/></body></html>
