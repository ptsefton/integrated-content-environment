<?xml version="1.0"?>
<html><head><meta content="text/html; charset=UTF-8" http-equiv="Content-Type"/><title/><style type="text/css">table {border-spacing: 0;empty-cells: show; }
.body .indent {margin-left: 25px;}
.body .hint {font-size: 1.4em; font-style: normal;font-weight:bolder;color: #00000;}
.spCh {font-family: 'Lucida Grande','Arial Unicode MS', sans-serif; font-size: 1.2em;}
span.underline {text-decoration:underline; }
Header_20_left.P1 {font-size:10pt; }
dd1.P2 {margin-left:-0.046cm; margin-right:0cm; text-indent:0cm; }
span.T1 {font-weight:bold; }</style></head><body><h1><a id="id2" name="id2"><!--id2--></a>4.1 Configuration parameters</h1><h2><a id="id3" name="id3"><!--id3--></a>4.1.1 Required parameters</h2><dl><dt>contentSelector</dt><dd>jQuery selector or node that defines the content container.</dd><dt>titleSelector</dt><dd>jQuery selector or node that defines the package title.</dd><dt>tocSelector</dt><dd>jQuery selector or node that defines the package TOC.</dd><dt>contentBaseUrl</dt><dd>URL of the package. e.g.  http://hostname.com/paquete/</dd><dt>getManifestJson</dt><dd>reads manifest.json for paquete. <b>getManifestJson</b> accepts either jsonFileName or jsonFilePath as it's parameter, see below:
<pre>//using json filename
paquete.getManifestJson("manifest.json");</pre>
<pre>//using json file path
paquete.getManifestJson("http://hostname.com/paquete/manifest.json");</pre></dd></dl><h2><a id="id6" name="id6"><!--id6--></a>4.1.2 Optional parameters</h2><dl><dt>displayTOC</dt><dd>Function for creating the TOC structure. This function can be overwritten; enabling the use of other tree or file-structure javascript plugins such as jsTree. </dd><dd>For example:
<pre>function createTOC{</pre>
<pre>// creates TOC </pre>
<pre>}</pre>
<pre>paquete.displayTOC = createTOC; </pre></dd><dt>contentScrollToTop</dt><dd>Function to scroll to the top of the page after document loads. This function is useful when the package content is within a container with a vertical scrollbar. </dd><dd> For example:
<pre>paquete.contentScrollToTop = function() {jQ(paquete.contentSelector).parent().scrollTop(0);};</pre></dd><dt>contentLoadedCallback</dt><dd>Function to callback after the content is loaded. This function can be used if you want to do some process right after the content page is loaded. </dd><dt>UseNavigation</dt><dd>This setting is a switch to insert navigation for paquete contents. The default value of this is false. </dd><dt>NavFormSettings</dt><dd>a set of settings available for constructing a navigation form.<ul class="lib"><li><p>style - Style class name of the navigation form which is used as identifier of the Navigation form.</p></li><li><p>prevStyle - Style class name of "go to previous document" button which is used as identifier of the previous button.</p></li><li><p>nextStyle - Style class name of "go to next document" button which is used as identifier of the next button.</p></li><li><p>topStyle - Style class name of "go to start of the current document" button which is used as identifier of the top button.</p></li><li><p>prevLabel - Label for previous button. This can be defined as string of Text or HTML element.</p></li><li><p>nextLabel - Label for next button. This can be defined as string of Text or HTML element.</p></li><li><p>topLabel - Label for top button. This can be defined as string of Text or HTML element.</p></li><li><p>inactivePrevLabel - Label for previous button while it is inactive. This can be defined as string of Text or HTML element. If this is not given, then Paquete will use prevLabel.</p></li><li><p>inactiveNextLabel - Label for next button while it is inactive. This can be defined as string of Text or HTML element. If this is not given, then Paquete will use nextLabel.</p></li><li><p>inactiveTopLabel - Label for top button while it is inactive. This can be defined as string of Text or HTML element. If this is not given, then Paquete will use topLabel.</p></li><li><p>prevFunction - Overwritten function to perform when prevButton is clicked.</p></li><li><p>nextFunction - Overwritten function to perform when nextButton is clicked.</p></li><li><p>topFunction - Overwritten function to perform when topButton is clicked.</p></li><li><p>prevAlwaysActive - If this is true, then prevButton is always active. Default behaviour is button becomes inactive when first document is selected.</p></li><li><p>nextAlwaysActive - If this is true, then nextButton is always active. Default behaviour is button becomes inactive when last document is selected.</p></li><li><p>topAlwaysActive - If this is true, then topButton is always active. Default behaviour is top button becomes inactive if the whole document can fit within a document.</p></li><li><p>includeTopButton - If this is set to false, form rendition will omit top button rendition. Thus, Navigation form will not have top button.</p></li><li><p>onNavFormDisplay - Customized form Display function. This function allows Navigation Display function to be overwritten. This allows the navigation form to be moved and placed in a different place to the default settings. The default locations are before and after the content container.</p></li><li><p>openLeafClass - Style class name for showing the children nodes of the current node.</p></li><li><p>closedLeafClass - Style class name for hiding the children nodes of the current node. </p></li></ul></dd></dl><p/><dl><dt>getThisNodeHash</dt><dd>Overwritten function for Navigation form function to get the selected document location. For example, jsTree.js builds its TOC differently to Paquete and this function can be used to replace the way Paquete gets the hash locations.</dd><dd>For example:
<pre>function getThisNodeHash(node){return node.attr('id');}</pre></dd></dl><p/><dl><dt>getCurrentDoc</dt><dd>Function to find the current viewing document. Paquete determines which document is currently being viewed by searching for ".selected" class in the TOC tree. If you are using a different identifier, please overwrite this function. </dd><dt>getSelectedNode</dt><dd>Overwitten function to search of selected node. This function is different from getCurrentDoc function. This function searches with Hash location and is used by Paquete to determine if the location has changed and whether it needs to update TOC. </dd></dl></body></html>
